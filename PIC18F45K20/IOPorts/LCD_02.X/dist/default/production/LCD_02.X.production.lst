

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 27 22:59:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K20 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007B3E                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _Mensaje2
    59  007B3E  20                 	db	32
    60  007B3F  49                 	db	73
    61  007B40  6E                 	db	110
    62  007B41  67                 	db	103
    63  007B42  20                 	db	32
    64  007B43  45                 	db	69
    65  007B44  6C                 	db	108
    66  007B45  65                 	db	101
    67  007B46  63                 	db	99
    68  007B47  74                 	db	116
    69  007B48  72                 	db	114
    70  007B49  6F                 	db	111
    71  007B4A  6E                 	db	110
    72  007B4B  69                 	db	105
    73  007B4C  6B                 	db	107
    74  007B4D  20                 	db	32
    75  007B4E  00                 	db	0
    76                           
    77                           ;initializer for _Mensaje1
    78  007B4F  43                 	db	67
    79  007B50  74                 	db	116
    80  007B51  6F                 	db	111
    81  007B52  73                 	db	115
    82  007B53  20                 	db	32
    83  007B54  44                 	db	68
    84  007B55  69                 	db	105
    85  007B56  67                 	db	103
    86  007B57  69                 	db	105
    87  007B58  74                 	db	116
    88  007B59  61                 	db	97
    89  007B5A  6C                 	db	108
    90  007B5B  65                 	db	101
    91  007B5C  73                 	db	115
    92  007B5D  20                 	db	32
    93  007B5E  32                 	db	50
    94  007B5F  00                 	db	0
    95  0000                     _TRISBbits	set	3987
    96  0000                     _ANSELHbits	set	3967
    97  0000                     _LATB	set	3978
    98  0000                     _OSCCONbits	set	4051
    99  0000                     _PORTBbits	set	3969
   100  0000                     _PORTDbits	set	3971
   101  0000                     _TRISDbits	set	3989
   102                           
   103                           ; #config settings
   104  0000                     
   105                           	psect	cinit
   106  007B60                     __pcinit:
   107                           	opt stack 0
   108  007B60                     start_initialization:
   109                           	opt stack 0
   110  007B60                     __initialization:
   111                           	opt stack 0
   112                           
   113                           ; Initialize objects allocated to COMRAM (34 bytes)
   114                           ; load TBLPTR registers with __pidataCOMRAM
   115  007B60  0E3E               	movlw	low __pidataCOMRAM
   116  007B62  6EF6               	movwf	tblptrl,c
   117  007B64  0E7B               	movlw	high __pidataCOMRAM
   118  007B66  6EF7               	movwf	tblptrh,c
   119  007B68  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   120  007B6A  6EF8               	movwf	tblptru,c
   121  007B6C  EE00  F001         	lfsr	0,__pdataCOMRAM
   122  007B70  EE10 F022          	lfsr	1,34
   123  007B74                     copy_data0:
   124  007B74  0009               	tblrd		*+
   125  007B76  CFF5 FFEE          	movff	tablat,postinc0
   126  007B7A  50E5               	movf	postdec1,w,c
   127  007B7C  50E1               	movf	fsr1l,w,c
   128  007B7E  E1FA               	bnz	copy_data0
   129  007B80                     end_of_initialization:
   130                           	opt stack 0
   131  007B80                     __end_of__initialization:
   132                           	opt stack 0
   133  007B80  0E00               	movlw	low (__Lmediumconst shr (0+16))
   134  007B82  6EF8               	movwf	tblptru,c
   135  007B84  0100               	movlb	0
   136  007B86  EFDE  F03D         	goto	_main	;jump to C main() function
   137                           tblptru	equ	0xFF8
   138                           tblptrh	equ	0xFF7
   139                           tblptrl	equ	0xFF6
   140                           tablat	equ	0xFF5
   141                           postinc0	equ	0xFEE
   142                           postdec1	equ	0xFE5
   143                           fsr1l	equ	0xFE1
   144                           
   145                           	psect	dataCOMRAM
   146  000001                     __pdataCOMRAM:
   147                           	opt stack 0
   148  000001                     _Mensaje2:
   149                           	opt stack 0
   150  000001                     	ds	17
   151  000012                     _Mensaje1:
   152                           	opt stack 0
   153  000012                     	ds	17
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           postdec1	equ	0xFE5
   160                           fsr1l	equ	0xFE1
   161                           
   162                           	psect	cstackCOMRAM
   163  000023                     __pcstackCOMRAM:
   164                           	opt stack 0
   165  000023                     ??_Lcd_Cmd:
   166  000023                     ??_Lcd_Chr_CP:
   167  000023                     ??_SWdelay:
   168  000023                     
   169                           ; 1 bytes @ 0x0
   170  000023                     	ds	2
   171  000025                     Lcd_Chr_CP@data:
   172                           	opt stack 0
   173  000025                     Lcd_Cmd@data:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x2
   177  000025                     	ds	1
   178  000026                     ??_Lcd_Init:
   179  000026                     Lcd_Out@x:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x3
   183  000026                     	ds	1
   184  000027                     Lcd_Init@data:
   185                           	opt stack 0
   186  000027                     Lcd_Out@buffer:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x4
   190  000027                     	ds	2
   191  000029                     Lcd_Out@y:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x6
   195  000029                     	ds	1
   196  00002A                     Lcd_Out@data:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x7
   200  00002A                     	ds	1
   201  00002B                     tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           ; 1 bytes @ 0x8
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 58 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   229 ;;      Params:         0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		_Lcd_Cmd
   237 ;;		_Lcd_Init
   238 ;;		_Lcd_Out
   239 ;;		_SWdelay
   240 ;;		_SetUp
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text0
   247  007BBC                     __ptext0:
   248                           	opt stack 0
   249  007BBC                     _main:
   250                           	opt stack 29
   251                           
   252                           ;main.c: 61: SetUp();
   253                           
   254                           ;incstack = 0
   255  007BBC  EC95  F03D         	call	_SetUp	;wreg free
   256                           
   257                           ;main.c: 63: Lcd_Init();
   258  007BC0  EC37  F03E         	call	_Lcd_Init	;wreg free
   259                           
   260                           ;main.c: 64: Lcd_Cmd(12);
   261  007BC4  0E0C               	movlw	12
   262  007BC6  ECCD  F03E         	call	_Lcd_Cmd
   263                           
   264                           ;main.c: 66: Lcd_Out(1,0,Mensaje1);
   265  007BCA  0E00               	movlw	0
   266  007BCC  6E26               	movwf	Lcd_Out@x,c
   267  007BCE  0E12               	movlw	low _Mensaje1
   268  007BD0  6E27               	movwf	Lcd_Out@buffer,c
   269  007BD2  0E00               	movlw	high _Mensaje1
   270  007BD4  6E28               	movwf	Lcd_Out@buffer+1,c
   271  007BD6  0E01               	movlw	1
   272  007BD8  EC06  F03E         	call	_Lcd_Out
   273                           
   274                           ;main.c: 67: Lcd_Out(2,0,Mensaje2);
   275  007BDC  0E00               	movlw	0
   276  007BDE  6E26               	movwf	Lcd_Out@x,c
   277  007BE0  0E01               	movlw	low _Mensaje2
   278  007BE2  6E27               	movwf	Lcd_Out@buffer,c
   279  007BE4  0E00               	movlw	high _Mensaje2
   280  007BE6  6E28               	movwf	Lcd_Out@buffer+1,c
   281  007BE8  0E02               	movlw	2
   282  007BEA  EC06  F03E         	call	_Lcd_Out
   283  007BEE                     
   284                           ;main.c: 71: {
   285                           ;main.c: 72: if (PORTBbits.RB1 == 1)
   286  007BEE  A281               	btfss	3969,1,c	;volatile
   287  007BF0  D005               	goto	l71
   288                           
   289                           ;main.c: 73: {
   290                           ;main.c: 74: SWdelay();
   291  007BF2  ECC5  F03D         	call	_SWdelay	;wreg free
   292                           
   293                           ;main.c: 75: Lcd_Cmd(24);
   294  007BF6  0E18               	movlw	24
   295  007BF8  ECCD  F03E         	call	_Lcd_Cmd
   296  007BFC                     l71:
   297                           
   298                           ;main.c: 76: }
   299                           ;main.c: 77: if (PORTBbits.RB0 == 1)
   300  007BFC  A081               	btfss	3969,0,c	;volatile
   301  007BFE  D7F7               	goto	l70
   302                           
   303                           ;main.c: 78: {
   304                           ;main.c: 79: SWdelay();
   305  007C00  ECC5  F03D         	call	_SWdelay	;wreg free
   306                           
   307                           ;main.c: 80: Lcd_Cmd(28);
   308  007C04  0E1C               	movlw	28
   309  007C06  ECCD  F03E         	call	_Lcd_Cmd
   310  007C0A  D7F1               	goto	l70
   311  007C0C                     __end_of_main:
   312                           	opt stack 0
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321 ;; *************** function _SetUp *****************
   322 ;; Defined at:
   323 ;;		line 93 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   337 ;;      Params:         0       0       0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text1
   351  007B2A                     __ptext1:
   352                           	opt stack 0
   353  007B2A                     _SetUp:
   354                           	opt stack 30
   355                           
   356                           ;main.c: 98: OSCCONbits.IRCF = 0b111;
   357                           
   358                           ;incstack = 0
   359  007B2A  88D3               	bsf	4051,4,c	;volatile
   360  007B2C  8AD3               	bsf	4051,5,c	;volatile
   361  007B2E  8CD3               	bsf	4051,6,c	;volatile
   362                           
   363                           ;main.c: 103: LATB = 0;
   364  007B30  0E00               	movlw	0
   365  007B32  6E8A               	movwf	3978,c	;volatile
   366                           
   367                           ;main.c: 110: ANSELHbits.ANS12 = 0;
   368  007B34  987F               	bcf	3967,4,c	;volatile
   369                           
   370                           ;main.c: 111: ANSELHbits.ANS10 = 0;
   371  007B36  947F               	bcf	3967,2,c	;volatile
   372                           
   373                           ;main.c: 114: TRISBbits.TRISB1 = 1;
   374  007B38  8293               	bsf	3987,1,c	;volatile
   375                           
   376                           ;main.c: 115: TRISBbits.TRISB0 = 1;
   377  007B3A  8093               	bsf	3987,0,c	;volatile
   378  007B3C  0012               	return	
   379  007B3E                     __end_of_SetUp:
   380                           	opt stack 0
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389 ;; *************** function _SWdelay *****************
   390 ;; Defined at:
   391 ;;		line 126 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   405 ;;      Params:         0       0       0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0       0       0
   408 ;;      Totals:         1       0       0       0       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419  007B8A                     __ptext2:
   420                           	opt stack 0
   421  007B8A                     _SWdelay:
   422                           	opt stack 30
   423                           
   424                           ;main.c: 128: while(PORTBbits.RB1 == 1)
   425                           
   426                           ;incstack = 0
   427  007B8A  D009               	goto	l81
   428  007B8C                     
   429                           ;main.c: 129: _delay((unsigned long)((1)*(16000000/4000.0)));
   430  007B8C  0E06               	movlw	6
   431  007B8E  6E23               	movwf	??_SWdelay& (0+255),c
   432  007B90  0E30               	movlw	48
   433  007B92                     u297:
   434  007B92  2EE8               	decfsz	wreg,f,c
   435  007B94  D7FE               	bra	u297
   436  007B96  2E23               	decfsz	??_SWdelay& (0+255),f,c
   437  007B98  D7FC               	bra	u297
   438  007B9A  F000 F000          	nop2	
   439  007B9E                     l81:
   440  007B9E  A281               	btfss	3969,1,c	;volatile
   441  007BA0  D00A               	goto	l84
   442  007BA2  D7F4               	goto	l82
   443  007BA4                     
   444                           ;main.c: 131: _delay((unsigned long)((1)*(16000000/4000.0)));
   445  007BA4  0E06               	movlw	6
   446  007BA6  6E23               	movwf	??_SWdelay& (0+255),c
   447  007BA8  0E30               	movlw	48
   448  007BAA                     u307:
   449  007BAA  2EE8               	decfsz	wreg,f,c
   450  007BAC  D7FE               	bra	u307
   451  007BAE  2E23               	decfsz	??_SWdelay& (0+255),f,c
   452  007BB0  D7FC               	bra	u307
   453  007BB2  F000 F000          	nop2	
   454  007BB6                     l84:
   455  007BB6  A081               	btfss	3969,0,c	;volatile
   456  007BB8  0012               	return	
   457  007BBA  D7F4               	goto	l85
   458  007BBC                     __end_of_SWdelay:
   459                           	opt stack 0
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postdec1	equ	0xFE5
   467                           fsr1l	equ	0xFE1
   468                           
   469 ;; *************** function _Lcd_Out *****************
   470 ;; Defined at:
   471 ;;		line 94 in file "lcd.h"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  y               1    wreg     unsigned char 
   474 ;;  x               1    3[COMRAM] unsigned char 
   475 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
   476 ;;		 -> Mensaje2(17), Mensaje1(17), 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  y               1    6[COMRAM] unsigned char 
   479 ;;  data            1    7[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   489 ;;      Params:         3       0       0       0       0       0       0
   490 ;;      Locals:         2       0       0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0
   492 ;;      Totals:         5       0       0       0       0       0       0
   493 ;;Total ram usage:        5 bytes
   494 ;; Hardware stack levels used:    1
   495 ;; Hardware stack levels required when called:    1
   496 ;; This function calls:
   497 ;;		_Lcd_Chr_CP
   498 ;;		_Lcd_Cmd
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text3
   505  007C0C                     __ptext3:
   506                           	opt stack 0
   507  007C0C                     _Lcd_Out:
   508                           	opt stack 29
   509                           
   510                           ;incstack = 0
   511                           ;Lcd_Out@y stored from wreg
   512  007C0C  6E29               	movwf	Lcd_Out@y,c
   513                           
   514                           ;lcd.h: 96: unsigned char data;
   515                           ;lcd.h: 98: switch (y)
   516  007C0E  D00D               	goto	l32
   517  007C10  5026               	movf	Lcd_Out@x,w,c
   518  007C12  0F80               	addlw	128
   519  007C14  D008               	goto	L3
   520  007C16  5026               	movf	Lcd_Out@x,w,c
   521  007C18  0FC0               	addlw	192
   522  007C1A  D005               	goto	L3
   523  007C1C  5026               	movf	Lcd_Out@x,w,c
   524  007C1E  0F94               	addlw	148
   525  007C20  D002               	goto	L3
   526  007C22  5026               	movf	Lcd_Out@x,w,c
   527  007C24  0FD4               	addlw	212
   528  007C26                     L3:
   529  007C26  6E2A               	movwf	Lcd_Out@data,c
   530                           
   531                           ;lcd.h: 105: }
   532                           
   533                           ;lcd.h: 104: default: break;
   534  007C28  D00D               	goto	l34
   535  007C2A                     l32:
   536  007C2A  5029               	movf	Lcd_Out@y,w,c
   537                           
   538                           ; Switch size 1, requested type "space"
   539                           ; Number of cases is 4, Range of values is 1 to 4
   540                           ; switch strategies available:
   541                           ; Name         Instructions Cycles
   542                           ; simple_byte           13     7 (average)
   543                           ;	Chosen strategy is simple_byte
   544  007C2C  0A01               	xorlw	1	; case 1
   545  007C2E  B4D8               	btfsc	status,2,c
   546  007C30  D7EF               	goto	l33
   547  007C32  0A03               	xorlw	3	; case 2
   548  007C34  B4D8               	btfsc	status,2,c
   549  007C36  D7EF               	goto	l35
   550  007C38  0A01               	xorlw	1	; case 3
   551  007C3A  B4D8               	btfsc	status,2,c
   552  007C3C  D7EF               	goto	l36
   553  007C3E  0A07               	xorlw	7	; case 4
   554  007C40  B4D8               	btfsc	status,2,c
   555  007C42  D7EF               	goto	l37
   556  007C44                     l34:
   557                           
   558                           ;lcd.h: 106: Lcd_Cmd(data);
   559  007C44  502A               	movf	Lcd_Out@data,w,c
   560  007C46  ECCD  F03E         	call	_Lcd_Cmd
   561                           
   562                           ;lcd.h: 107: while(*buffer)
   563  007C4A  D009               	goto	l39
   564  007C4C                     
   565                           ;lcd.h: 108: {
   566                           ;lcd.h: 109: Lcd_Chr_CP(*buffer);
   567  007C4C  C027  FFD9         	movff	Lcd_Out@buffer,fsr2l
   568  007C50  C028  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
   569  007C54  50DF               	movf	indf2,w,c
   570  007C56  EC64  F03F         	call	_Lcd_Chr_CP
   571                           
   572                           ;lcd.h: 110: buffer++;
   573  007C5A  4A27               	infsnz	Lcd_Out@buffer,f,c
   574  007C5C  2A28               	incf	Lcd_Out@buffer+1,f,c
   575  007C5E                     l39:
   576  007C5E  C027  FFD9         	movff	Lcd_Out@buffer,fsr2l
   577  007C62  C028  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
   578  007C66  50DF               	movf	indf2,w,c
   579  007C68  B4D8               	btfsc	status,2,c
   580  007C6A  0012               	return	
   581  007C6C  D7EF               	goto	l40
   582  007C6E                     __end_of_Lcd_Out:
   583                           	opt stack 0
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1l	equ	0xFE1
   592                           indf2	equ	0xFDF
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           
   597 ;; *************** function _Lcd_Chr_CP *****************
   598 ;; Defined at:
   599 ;;		line 136 in file "lcd.h"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  data            1    wreg     unsigned char 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  data            1    2[COMRAM] unsigned char 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   613 ;;      Params:         0       0       0       0       0       0       0
   614 ;;      Locals:         1       0       0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0       0       0
   616 ;;      Totals:         3       0       0       0       0       0       0
   617 ;;Total ram usage:        3 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_Lcd_Out
   623 ;;		_Lcd_Out2
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text4
   628  007EC8                     __ptext4:
   629                           	opt stack 0
   630  007EC8                     _Lcd_Chr_CP:
   631                           	opt stack 29
   632                           
   633                           ;incstack = 0
   634                           ;Lcd_Chr_CP@data stored from wreg
   635  007EC8  6E25               	movwf	Lcd_Chr_CP@data,c
   636                           
   637                           ;lcd.h: 138: PORTDbits.RD0 = 0; PORTDbits.RD1 = 1;
   638  007ECA  9083               	bcf	3971,0,c	;volatile
   639  007ECC  8283               	bsf	3971,1,c	;volatile
   640                           
   641                           ;lcd.h: 139: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
   642  007ECE  6A23               	clrf	??_Lcd_Chr_CP& (0+255),c
   643  007ED0  AE25               	btfss	Lcd_Chr_CP@data,7,c
   644  007ED2  D001               	bra	u185
   645  007ED4  2A23               	incf	??_Lcd_Chr_CP& (0+255),f,c
   646  007ED6                     u185:
   647  007ED6  0E01               	movlw	1
   648  007ED8  1623               	andwf	??_Lcd_Chr_CP,f,c
   649  007EDA  3223               	rrcf	??_Lcd_Chr_CP,f,c
   650  007EDC  3223               	rrcf	??_Lcd_Chr_CP,f,c
   651  007EDE  5083               	movf	3971,w,c	;volatile
   652  007EE0  1823               	xorwf	??_Lcd_Chr_CP,w,c
   653  007EE2  0B7F               	andlw	-129
   654  007EE4  1823               	xorwf	??_Lcd_Chr_CP,w,c
   655  007EE6  6E83               	movwf	3971,c	;volatile
   656  007EE8  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   657  007EEC  0E06               	movlw	6
   658  007EEE  6E24               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
   659  007EF0                     u195:
   660  007EF0  90D8               	bcf	status,0,c
   661  007EF2  3223               	rrcf	??_Lcd_Chr_CP,f,c
   662  007EF4  2E24               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
   663  007EF6  D7FC               	goto	u195
   664  007EF8  0E01               	movlw	1
   665  007EFA  1623               	andwf	??_Lcd_Chr_CP,f,c
   666  007EFC  3A23               	swapf	??_Lcd_Chr_CP,f,c
   667  007EFE  4623               	rlncf	??_Lcd_Chr_CP,f,c
   668  007F00  4623               	rlncf	??_Lcd_Chr_CP,f,c
   669  007F02  5083               	movf	3971,w,c	;volatile
   670  007F04  1823               	xorwf	??_Lcd_Chr_CP,w,c
   671  007F06  0BBF               	andlw	-65
   672  007F08  1823               	xorwf	??_Lcd_Chr_CP,w,c
   673  007F0A  6E83               	movwf	3971,c	;volatile
   674                           
   675                           ;lcd.h: 140: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
   676  007F0C  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   677  007F10  0E05               	movlw	5
   678  007F12  6E24               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
   679  007F14                     u205:
   680  007F14  90D8               	bcf	status,0,c
   681  007F16  3223               	rrcf	??_Lcd_Chr_CP,f,c
   682  007F18  2E24               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
   683  007F1A  D7FC               	goto	u205
   684  007F1C  0E01               	movlw	1
   685  007F1E  1623               	andwf	??_Lcd_Chr_CP,f,c
   686  007F20  3A23               	swapf	??_Lcd_Chr_CP,f,c
   687  007F22  4623               	rlncf	??_Lcd_Chr_CP,f,c
   688  007F24  5083               	movf	3971,w,c	;volatile
   689  007F26  1823               	xorwf	??_Lcd_Chr_CP,w,c
   690  007F28  0BDF               	andlw	-33
   691  007F2A  1823               	xorwf	??_Lcd_Chr_CP,w,c
   692  007F2C  6E83               	movwf	3971,c	;volatile
   693  007F2E  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   694  007F32  3A23               	swapf	??_Lcd_Chr_CP,f,c
   695  007F34  0E0F               	movlw	15
   696  007F36  1623               	andwf	??_Lcd_Chr_CP,f,c
   697  007F38  0E01               	movlw	1
   698  007F3A  1623               	andwf	??_Lcd_Chr_CP,f,c
   699  007F3C  3A23               	swapf	??_Lcd_Chr_CP,f,c
   700  007F3E  5083               	movf	3971,w,c	;volatile
   701  007F40  1823               	xorwf	??_Lcd_Chr_CP,w,c
   702  007F42  0BEF               	andlw	-17
   703  007F44  1823               	xorwf	??_Lcd_Chr_CP,w,c
   704  007F46  6E83               	movwf	3971,c	;volatile
   705                           
   706                           ;lcd.h: 141: _delay(10);
   707  007F48  0E03               	movlw	3
   708  007F4A                     u317:
   709  007F4A  2EE8               	decfsz	wreg,f,c
   710  007F4C  D7FE               	bra	u317
   711  007F4E  F000               	nop	
   712                           
   713                           ;lcd.h: 142: PORTDbits.RD0 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); PORTD
      +                          bits.RD0 = 0;
   714  007F50  8083               	bsf	3971,0,c	;volatile
   715  007F52  0E06               	movlw	6
   716  007F54                     u327:
   717  007F54  2EE8               	decfsz	wreg,f,c
   718  007F56  D7FE               	bra	u327
   719  007F58  F000 F000          	nop2	
   720  007F5C  9083               	bcf	3971,0,c	;volatile
   721                           
   722                           ;lcd.h: 143: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
   723  007F5E  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   724  007F62  90D8               	bcf	status,0,c
   725  007F64  3223               	rrcf	??_Lcd_Chr_CP,f,c
   726  007F66  90D8               	bcf	status,0,c
   727  007F68  3223               	rrcf	??_Lcd_Chr_CP,f,c
   728  007F6A  90D8               	bcf	status,0,c
   729  007F6C  3223               	rrcf	??_Lcd_Chr_CP,f,c
   730  007F6E  0E01               	movlw	1
   731  007F70  1623               	andwf	??_Lcd_Chr_CP,f,c
   732  007F72  3223               	rrcf	??_Lcd_Chr_CP,f,c
   733  007F74  3223               	rrcf	??_Lcd_Chr_CP,f,c
   734  007F76  5083               	movf	3971,w,c	;volatile
   735  007F78  1823               	xorwf	??_Lcd_Chr_CP,w,c
   736  007F7A  0B7F               	andlw	-129
   737  007F7C  1823               	xorwf	??_Lcd_Chr_CP,w,c
   738  007F7E  6E83               	movwf	3971,c	;volatile
   739  007F80  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   740  007F84  90D8               	bcf	status,0,c
   741  007F86  3223               	rrcf	??_Lcd_Chr_CP,f,c
   742  007F88  90D8               	bcf	status,0,c
   743  007F8A  3223               	rrcf	??_Lcd_Chr_CP,f,c
   744  007F8C  0E01               	movlw	1
   745  007F8E  1623               	andwf	??_Lcd_Chr_CP,f,c
   746  007F90  3A23               	swapf	??_Lcd_Chr_CP,f,c
   747  007F92  4623               	rlncf	??_Lcd_Chr_CP,f,c
   748  007F94  4623               	rlncf	??_Lcd_Chr_CP,f,c
   749  007F96  5083               	movf	3971,w,c	;volatile
   750  007F98  1823               	xorwf	??_Lcd_Chr_CP,w,c
   751  007F9A  0BBF               	andlw	-65
   752  007F9C  1823               	xorwf	??_Lcd_Chr_CP,w,c
   753  007F9E  6E83               	movwf	3971,c	;volatile
   754                           
   755                           ;lcd.h: 144: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
   756  007FA0  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   757  007FA4  90D8               	bcf	status,0,c
   758  007FA6  3223               	rrcf	??_Lcd_Chr_CP,f,c
   759  007FA8  0E01               	movlw	1
   760  007FAA  1623               	andwf	??_Lcd_Chr_CP,f,c
   761  007FAC  3A23               	swapf	??_Lcd_Chr_CP,f,c
   762  007FAE  4623               	rlncf	??_Lcd_Chr_CP,f,c
   763  007FB0  5083               	movf	3971,w,c	;volatile
   764  007FB2  1823               	xorwf	??_Lcd_Chr_CP,w,c
   765  007FB4  0BDF               	andlw	-33
   766  007FB6  1823               	xorwf	??_Lcd_Chr_CP,w,c
   767  007FB8  6E83               	movwf	3971,c	;volatile
   768  007FBA  C025  F023         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   769  007FBE  0E01               	movlw	1
   770  007FC0  1623               	andwf	??_Lcd_Chr_CP,f,c
   771  007FC2  3A23               	swapf	??_Lcd_Chr_CP,f,c
   772  007FC4  5083               	movf	3971,w,c	;volatile
   773  007FC6  1823               	xorwf	??_Lcd_Chr_CP,w,c
   774  007FC8  0BEF               	andlw	-17
   775  007FCA  1823               	xorwf	??_Lcd_Chr_CP,w,c
   776  007FCC  6E83               	movwf	3971,c	;volatile
   777                           
   778                           ;lcd.h: 145: _delay(10);
   779  007FCE  0E03               	movlw	3
   780  007FD0                     u337:
   781  007FD0  2EE8               	decfsz	wreg,f,c
   782  007FD2  D7FE               	bra	u337
   783  007FD4  F000               	nop	
   784                           
   785                           ;lcd.h: 146: PORTDbits.RD0 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); PORTD
      +                          bits.RD0 = 0;
   786  007FD6  8083               	bsf	3971,0,c	;volatile
   787  007FD8  0E06               	movlw	6
   788  007FDA                     u347:
   789  007FDA  2EE8               	decfsz	wreg,f,c
   790  007FDC  D7FE               	bra	u347
   791  007FDE  F000 F000          	nop2	
   792  007FE2  9083               	bcf	3971,0,c	;volatile
   793                           
   794                           ;lcd.h: 147: _delay((unsigned long)((5)*(16000000/4000000.0))); _delay((unsigned long)((
      +                          5500)*(16000000/4000000.0)));
   795  007FE4  0E06               	movlw	6
   796  007FE6                     u357:
   797  007FE6  2EE8               	decfsz	wreg,f,c
   798  007FE8  D7FE               	bra	u357
   799  007FEA  F000 F000          	nop2	
   800  007FEE  0E1D               	movlw	29
   801  007FF0  6E23               	movwf	??_Lcd_Chr_CP& (0+255),c
   802  007FF2  0E91               	movlw	145
   803  007FF4                     u367:
   804  007FF4  2EE8               	decfsz	wreg,f,c
   805  007FF6  D7FE               	bra	u367
   806  007FF8  2E23               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
   807  007FFA  D7FC               	bra	u367
   808  007FFC  F000               	nop	
   809  007FFE  0012               	return		;funcret
   810  008000                     __end_of_Lcd_Chr_CP:
   811                           	opt stack 0
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postdec1	equ	0xFE5
   819                           fsr1l	equ	0xFE1
   820                           indf2	equ	0xFDF
   821                           fsr2h	equ	0xFDA
   822                           fsr2l	equ	0xFD9
   823                           status	equ	0xFD8
   824                           
   825 ;; *************** function _Lcd_Init *****************
   826 ;; Defined at:
   827 ;;		line 51 in file "lcd.h"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  data            1    4[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   841 ;;      Params:         0       0       0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0       0       0
   843 ;;      Temps:          1       0       0       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    1
   848 ;; This function calls:
   849 ;;		_Lcd_Cmd
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text5
   856  007C6E                     __ptext5:
   857                           	opt stack 0
   858  007C6E                     _Lcd_Init:
   859                           	opt stack 29
   860                           
   861                           ;lcd.h: 53: unsigned char data;
   862                           ;lcd.h: 54: TRISDbits.TRISD7 = 0;
   863                           
   864                           ;incstack = 0
   865  007C6E  9E95               	bcf	3989,7,c	;volatile
   866                           
   867                           ;lcd.h: 55: TRISDbits.TRISD6 = 0;
   868  007C70  9C95               	bcf	3989,6,c	;volatile
   869                           
   870                           ;lcd.h: 56: TRISDbits.TRISD5 = 0;
   871  007C72  9A95               	bcf	3989,5,c	;volatile
   872                           
   873                           ;lcd.h: 57: TRISDbits.TRISD4 = 0;
   874  007C74  9895               	bcf	3989,4,c	;volatile
   875                           
   876                           ;lcd.h: 58: TRISDbits.TRISD0 = 0;
   877  007C76  9095               	bcf	3989,0,c	;volatile
   878                           
   879                           ;lcd.h: 59: TRISDbits.TRISD1 = 0;
   880  007C78  9295               	bcf	3989,1,c	;volatile
   881                           
   882                           ;lcd.h: 60: PORTDbits.RD7 = 0;
   883  007C7A  9E83               	bcf	3971,7,c	;volatile
   884                           
   885                           ;lcd.h: 61: PORTDbits.RD6 = 0;
   886  007C7C  9C83               	bcf	3971,6,c	;volatile
   887                           
   888                           ;lcd.h: 62: PORTDbits.RD5 = 0;
   889  007C7E  9A83               	bcf	3971,5,c	;volatile
   890                           
   891                           ;lcd.h: 63: PORTDbits.RD4 = 0;
   892  007C80  9883               	bcf	3971,4,c	;volatile
   893                           
   894                           ;lcd.h: 64: PORTDbits.RD0 = 0;
   895  007C82  9083               	bcf	3971,0,c	;volatile
   896                           
   897                           ;lcd.h: 65: PORTDbits.RD1 = 0;
   898  007C84  9283               	bcf	3971,1,c	;volatile
   899                           
   900                           ;lcd.h: 66: _delay((unsigned long)((5500)*(16000000/4000000.0)));
   901  007C86  0E1D               	movlw	29
   902  007C88  6E26               	movwf	??_Lcd_Init& (0+255),c
   903  007C8A  0E91               	movlw	145
   904  007C8C                     u377:
   905  007C8C  2EE8               	decfsz	wreg,f,c
   906  007C8E  D7FE               	bra	u377
   907  007C90  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
   908  007C92  D7FC               	bra	u377
   909  007C94  F000               	nop	
   910                           
   911                           ;lcd.h: 67: _delay((unsigned long)((5500)*(16000000/4000000.0)));
   912  007C96  0E1D               	movlw	29
   913  007C98  6E26               	movwf	??_Lcd_Init& (0+255),c
   914  007C9A  0E91               	movlw	145
   915  007C9C                     u387:
   916  007C9C  2EE8               	decfsz	wreg,f,c
   917  007C9E  D7FE               	bra	u387
   918  007CA0  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
   919  007CA2  D7FC               	bra	u387
   920  007CA4  F000               	nop	
   921                           
   922                           ;lcd.h: 68: _delay((unsigned long)((5500)*(16000000/4000000.0)));
   923  007CA6  0E1D               	movlw	29
   924  007CA8  6E26               	movwf	??_Lcd_Init& (0+255),c
   925  007CAA  0E91               	movlw	145
   926  007CAC                     u397:
   927  007CAC  2EE8               	decfsz	wreg,f,c
   928  007CAE  D7FE               	bra	u397
   929  007CB0  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
   930  007CB2  D7FC               	bra	u397
   931  007CB4  F000               	nop	
   932                           
   933                           ;lcd.h: 69: _delay((unsigned long)((5500)*(16000000/4000000.0)));
   934  007CB6  0E1D               	movlw	29
   935  007CB8  6E26               	movwf	??_Lcd_Init& (0+255),c
   936  007CBA  0E91               	movlw	145
   937  007CBC                     u407:
   938  007CBC  2EE8               	decfsz	wreg,f,c
   939  007CBE  D7FE               	bra	u407
   940  007CC0  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
   941  007CC2  D7FC               	bra	u407
   942  007CC4  F000               	nop	
   943                           
   944                           ;lcd.h: 70: _delay((unsigned long)((5500)*(16000000/4000000.0)));
   945  007CC6  0E1D               	movlw	29
   946  007CC8  6E26               	movwf	??_Lcd_Init& (0+255),c
   947  007CCA  0E91               	movlw	145
   948  007CCC                     u417:
   949  007CCC  2EE8               	decfsz	wreg,f,c
   950  007CCE  D7FE               	bra	u417
   951  007CD0  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
   952  007CD2  D7FC               	bra	u417
   953  007CD4  F000               	nop	
   954                           
   955                           ;lcd.h: 71: _delay((unsigned long)((5500)*(16000000/4000000.0)));
   956  007CD6  0E1D               	movlw	29
   957  007CD8  6E26               	movwf	??_Lcd_Init& (0+255),c
   958  007CDA  0E91               	movlw	145
   959  007CDC                     u427:
   960  007CDC  2EE8               	decfsz	wreg,f,c
   961  007CDE  D7FE               	bra	u427
   962  007CE0  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
   963  007CE2  D7FC               	bra	u427
   964  007CE4  F000               	nop	
   965                           
   966                           ;lcd.h: 73: for(data = 1; data < 4; data ++)
   967  007CE6  0E01               	movlw	1
   968  007CE8  6E27               	movwf	Lcd_Init@data,c
   969  007CEA  D020               	goto	L4
   970  007CEC                     l27:
   971                           
   972                           ;lcd.h: 74: {
   973                           ;lcd.h: 75: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD0 = 0;
   974  007CEC  9E83               	bcf	3971,7,c	;volatile
   975  007CEE  9C83               	bcf	3971,6,c	;volatile
   976  007CF0  8A83               	bsf	3971,5,c	;volatile
   977  007CF2  8883               	bsf	3971,4,c	;volatile
   978  007CF4  9083               	bcf	3971,0,c	;volatile
   979                           
   980                           ;lcd.h: 76: PORTDbits.RD1 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
   981  007CF6  9283               	bcf	3971,1,c	;volatile
   982  007CF8  9E83               	bcf	3971,7,c	;volatile
   983  007CFA  9C83               	bcf	3971,6,c	;volatile
   984  007CFC  8A83               	bsf	3971,5,c	;volatile
   985  007CFE  8883               	bsf	3971,4,c	;volatile
   986                           
   987                           ;lcd.h: 77: PORTDbits.RD0 = 1; PORTDbits.RD1 = 0;
   988  007D00  8083               	bsf	3971,0,c	;volatile
   989  007D02  9283               	bcf	3971,1,c	;volatile
   990                           
   991                           ;lcd.h: 78: _delay((unsigned long)((5)*(16000000/4000000.0)));
   992  007D04  0E06               	movlw	6
   993  007D06                     u437:
   994  007D06  2EE8               	decfsz	wreg,f,c
   995  007D08  D7FE               	bra	u437
   996  007D0A  F000 F000          	nop2	
   997                           
   998                           ;lcd.h: 79: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD0 = 0;
   999  007D0E  9E83               	bcf	3971,7,c	;volatile
  1000  007D10  9C83               	bcf	3971,6,c	;volatile
  1001  007D12  8A83               	bsf	3971,5,c	;volatile
  1002  007D14  8883               	bsf	3971,4,c	;volatile
  1003  007D16  9083               	bcf	3971,0,c	;volatile
  1004                           
  1005                           ;lcd.h: 80: PORTDbits.RD1 = 0;
  1006  007D18  9283               	bcf	3971,1,c	;volatile
  1007                           
  1008                           ;lcd.h: 81: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1009  007D1A  0E1D               	movlw	29
  1010  007D1C  6E26               	movwf	??_Lcd_Init& (0+255),c
  1011  007D1E  0E91               	movlw	145
  1012  007D20                     u447:
  1013  007D20  2EE8               	decfsz	wreg,f,c
  1014  007D22  D7FE               	bra	u447
  1015  007D24  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
  1016  007D26  D7FC               	bra	u447
  1017  007D28  F000               	nop	
  1018  007D2A  2A27               	incf	Lcd_Init@data,f,c
  1019  007D2C                     L4:
  1020  007D2C  0E03               	movlw	3
  1021  007D2E  6427               	cpfsgt	Lcd_Init@data,c
  1022  007D30  D7DD               	goto	l27
  1023                           
  1024                           ;lcd.h: 82: }
  1025                           ;lcd.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD0 = 0; PORTDbits.RD1 = 0;
  1026  007D32  9E83               	bcf	3971,7,c	;volatile
  1027  007D34  9C83               	bcf	3971,6,c	;volatile
  1028  007D36  8A83               	bsf	3971,5,c	;volatile
  1029  007D38  9883               	bcf	3971,4,c	;volatile
  1030  007D3A  9083               	bcf	3971,0,c	;volatile
  1031  007D3C  9283               	bcf	3971,1,c	;volatile
  1032                           
  1033                           ;lcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD0 = 1; PORTDbits.RD1 = 0;
  1034  007D3E  9E83               	bcf	3971,7,c	;volatile
  1035  007D40  9C83               	bcf	3971,6,c	;volatile
  1036  007D42  8A83               	bsf	3971,5,c	;volatile
  1037  007D44  9883               	bcf	3971,4,c	;volatile
  1038  007D46  8083               	bsf	3971,0,c	;volatile
  1039  007D48  9283               	bcf	3971,1,c	;volatile
  1040                           
  1041                           ;lcd.h: 85: _delay((unsigned long)((5)*(16000000/4000000.0)));
  1042  007D4A  0E06               	movlw	6
  1043  007D4C                     u457:
  1044  007D4C  2EE8               	decfsz	wreg,f,c
  1045  007D4E  D7FE               	bra	u457
  1046  007D50  F000 F000          	nop2	
  1047                           
  1048                           ;lcd.h: 86: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0; 
      +                          PORTDbits.RD0 = 0; PORTDbits.RD1 = 0;
  1049  007D54  9E83               	bcf	3971,7,c	;volatile
  1050  007D56  9C83               	bcf	3971,6,c	;volatile
  1051  007D58  8A83               	bsf	3971,5,c	;volatile
  1052  007D5A  9883               	bcf	3971,4,c	;volatile
  1053  007D5C  9083               	bcf	3971,0,c	;volatile
  1054  007D5E  9283               	bcf	3971,1,c	;volatile
  1055                           
  1056                           ;lcd.h: 87: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1057  007D60  0E1D               	movlw	29
  1058  007D62  6E26               	movwf	??_Lcd_Init& (0+255),c
  1059  007D64  0E91               	movlw	145
  1060  007D66                     u467:
  1061  007D66  2EE8               	decfsz	wreg,f,c
  1062  007D68  D7FE               	bra	u467
  1063  007D6A  2E26               	decfsz	??_Lcd_Init& (0+255),f,c
  1064  007D6C  D7FC               	bra	u467
  1065  007D6E  F000               	nop	
  1066                           
  1067                           ;lcd.h: 88: data = 40; Lcd_Cmd(data);
  1068  007D70  0E28               	movlw	40
  1069  007D72  6E27               	movwf	Lcd_Init@data,c
  1070  007D74  5027               	movf	Lcd_Init@data,w,c
  1071  007D76  ECCD  F03E         	call	_Lcd_Cmd
  1072                           
  1073                           ;lcd.h: 89: data = 16; Lcd_Cmd(data);
  1074  007D7A  0E10               	movlw	16
  1075  007D7C  6E27               	movwf	Lcd_Init@data,c
  1076  007D7E  5027               	movf	Lcd_Init@data,w,c
  1077  007D80  ECCD  F03E         	call	_Lcd_Cmd
  1078                           
  1079                           ;lcd.h: 90: data = 1; Lcd_Cmd(data);
  1080  007D84  0E01               	movlw	1
  1081  007D86  6E27               	movwf	Lcd_Init@data,c
  1082  007D88  5027               	movf	Lcd_Init@data,w,c
  1083  007D8A  ECCD  F03E         	call	_Lcd_Cmd
  1084                           
  1085                           ;lcd.h: 91: data = 15; Lcd_Cmd(data);
  1086  007D8E  0E0F               	movlw	15
  1087  007D90  6E27               	movwf	Lcd_Init@data,c
  1088  007D92  5027               	movf	Lcd_Init@data,w,c
  1089  007D94  ECCD  F03E         	call	_Lcd_Cmd
  1090  007D98  0012               	return		;funcret
  1091  007D9A                     __end_of_Lcd_Init:
  1092                           	opt stack 0
  1093                           tblptru	equ	0xFF8
  1094                           tblptrh	equ	0xFF7
  1095                           tblptrl	equ	0xFF6
  1096                           tablat	equ	0xFF5
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           fsr1l	equ	0xFE1
  1101                           indf2	equ	0xFDF
  1102                           fsr2h	equ	0xFDA
  1103                           fsr2l	equ	0xFD9
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _Lcd_Cmd *****************
  1107 ;; Defined at:
  1108 ;;		line 150 in file "lcd.h"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  data            1    wreg     unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  data            1    2[COMRAM] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0       0       0
  1124 ;;      Temps:          2       0       0       0       0       0       0
  1125 ;;      Totals:         3       0       0       0       0       0       0
  1126 ;;Total ram usage:        3 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_Lcd_Init
  1132 ;;		_Lcd_Out
  1133 ;;		_main
  1134 ;;		_Lcd_Out2
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text6
  1139  007D9A                     __ptext6:
  1140                           	opt stack 0
  1141  007D9A                     _Lcd_Cmd:
  1142                           	opt stack 29
  1143                           
  1144                           ;incstack = 0
  1145                           ;Lcd_Cmd@data stored from wreg
  1146  007D9A  6E25               	movwf	Lcd_Cmd@data,c
  1147                           
  1148                           ;lcd.h: 152: PORTDbits.RD0 = 0; PORTDbits.RD1 = 0;
  1149  007D9C  9083               	bcf	3971,0,c	;volatile
  1150  007D9E  9283               	bcf	3971,1,c	;volatile
  1151                           
  1152                           ;lcd.h: 153: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  1153  007DA0  6A23               	clrf	??_Lcd_Cmd& (0+255),c
  1154  007DA2  AE25               	btfss	Lcd_Cmd@data,7,c
  1155  007DA4  D001               	bra	u155
  1156  007DA6  2A23               	incf	??_Lcd_Cmd& (0+255),f,c
  1157  007DA8                     u155:
  1158  007DA8  0E01               	movlw	1
  1159  007DAA  1623               	andwf	??_Lcd_Cmd,f,c
  1160  007DAC  3223               	rrcf	??_Lcd_Cmd,f,c
  1161  007DAE  3223               	rrcf	??_Lcd_Cmd,f,c
  1162  007DB0  5083               	movf	3971,w,c	;volatile
  1163  007DB2  1823               	xorwf	??_Lcd_Cmd,w,c
  1164  007DB4  0B7F               	andlw	-129
  1165  007DB6  1823               	xorwf	??_Lcd_Cmd,w,c
  1166  007DB8  6E83               	movwf	3971,c	;volatile
  1167  007DBA  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1168  007DBE  0E06               	movlw	6
  1169  007DC0  6E24               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1170  007DC2                     u165:
  1171  007DC2  90D8               	bcf	status,0,c
  1172  007DC4  3223               	rrcf	??_Lcd_Cmd,f,c
  1173  007DC6  2E24               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1174  007DC8  D7FC               	goto	u165
  1175  007DCA  0E01               	movlw	1
  1176  007DCC  1623               	andwf	??_Lcd_Cmd,f,c
  1177  007DCE  3A23               	swapf	??_Lcd_Cmd,f,c
  1178  007DD0  4623               	rlncf	??_Lcd_Cmd,f,c
  1179  007DD2  4623               	rlncf	??_Lcd_Cmd,f,c
  1180  007DD4  5083               	movf	3971,w,c	;volatile
  1181  007DD6  1823               	xorwf	??_Lcd_Cmd,w,c
  1182  007DD8  0BBF               	andlw	-65
  1183  007DDA  1823               	xorwf	??_Lcd_Cmd,w,c
  1184  007DDC  6E83               	movwf	3971,c	;volatile
  1185                           
  1186                           ;lcd.h: 154: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  1187  007DDE  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1188  007DE2  0E05               	movlw	5
  1189  007DE4  6E24               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1190  007DE6                     u175:
  1191  007DE6  90D8               	bcf	status,0,c
  1192  007DE8  3223               	rrcf	??_Lcd_Cmd,f,c
  1193  007DEA  2E24               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1194  007DEC  D7FC               	goto	u175
  1195  007DEE  0E01               	movlw	1
  1196  007DF0  1623               	andwf	??_Lcd_Cmd,f,c
  1197  007DF2  3A23               	swapf	??_Lcd_Cmd,f,c
  1198  007DF4  4623               	rlncf	??_Lcd_Cmd,f,c
  1199  007DF6  5083               	movf	3971,w,c	;volatile
  1200  007DF8  1823               	xorwf	??_Lcd_Cmd,w,c
  1201  007DFA  0BDF               	andlw	-33
  1202  007DFC  1823               	xorwf	??_Lcd_Cmd,w,c
  1203  007DFE  6E83               	movwf	3971,c	;volatile
  1204  007E00  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1205  007E04  3A23               	swapf	??_Lcd_Cmd,f,c
  1206  007E06  0E0F               	movlw	15
  1207  007E08  1623               	andwf	??_Lcd_Cmd,f,c
  1208  007E0A  0E01               	movlw	1
  1209  007E0C  1623               	andwf	??_Lcd_Cmd,f,c
  1210  007E0E  3A23               	swapf	??_Lcd_Cmd,f,c
  1211  007E10  5083               	movf	3971,w,c	;volatile
  1212  007E12  1823               	xorwf	??_Lcd_Cmd,w,c
  1213  007E14  0BEF               	andlw	-17
  1214  007E16  1823               	xorwf	??_Lcd_Cmd,w,c
  1215  007E18  6E83               	movwf	3971,c	;volatile
  1216                           
  1217                           ;lcd.h: 155: _delay(10);
  1218  007E1A  0E03               	movlw	3
  1219  007E1C                     u477:
  1220  007E1C  2EE8               	decfsz	wreg,f,c
  1221  007E1E  D7FE               	bra	u477
  1222  007E20  F000               	nop	
  1223                           
  1224                           ;lcd.h: 156: PORTDbits.RD0 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); PORTD
      +                          bits.RD0 = 0;
  1225  007E22  8083               	bsf	3971,0,c	;volatile
  1226  007E24  0E06               	movlw	6
  1227  007E26                     u487:
  1228  007E26  2EE8               	decfsz	wreg,f,c
  1229  007E28  D7FE               	bra	u487
  1230  007E2A  F000 F000          	nop2	
  1231  007E2E  9083               	bcf	3971,0,c	;volatile
  1232                           
  1233                           ;lcd.h: 157: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  1234  007E30  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1235  007E34  90D8               	bcf	status,0,c
  1236  007E36  3223               	rrcf	??_Lcd_Cmd,f,c
  1237  007E38  90D8               	bcf	status,0,c
  1238  007E3A  3223               	rrcf	??_Lcd_Cmd,f,c
  1239  007E3C  90D8               	bcf	status,0,c
  1240  007E3E  3223               	rrcf	??_Lcd_Cmd,f,c
  1241  007E40  0E01               	movlw	1
  1242  007E42  1623               	andwf	??_Lcd_Cmd,f,c
  1243  007E44  3223               	rrcf	??_Lcd_Cmd,f,c
  1244  007E46  3223               	rrcf	??_Lcd_Cmd,f,c
  1245  007E48  5083               	movf	3971,w,c	;volatile
  1246  007E4A  1823               	xorwf	??_Lcd_Cmd,w,c
  1247  007E4C  0B7F               	andlw	-129
  1248  007E4E  1823               	xorwf	??_Lcd_Cmd,w,c
  1249  007E50  6E83               	movwf	3971,c	;volatile
  1250  007E52  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1251  007E56  90D8               	bcf	status,0,c
  1252  007E58  3223               	rrcf	??_Lcd_Cmd,f,c
  1253  007E5A  90D8               	bcf	status,0,c
  1254  007E5C  3223               	rrcf	??_Lcd_Cmd,f,c
  1255  007E5E  0E01               	movlw	1
  1256  007E60  1623               	andwf	??_Lcd_Cmd,f,c
  1257  007E62  3A23               	swapf	??_Lcd_Cmd,f,c
  1258  007E64  4623               	rlncf	??_Lcd_Cmd,f,c
  1259  007E66  4623               	rlncf	??_Lcd_Cmd,f,c
  1260  007E68  5083               	movf	3971,w,c	;volatile
  1261  007E6A  1823               	xorwf	??_Lcd_Cmd,w,c
  1262  007E6C  0BBF               	andlw	-65
  1263  007E6E  1823               	xorwf	??_Lcd_Cmd,w,c
  1264  007E70  6E83               	movwf	3971,c	;volatile
  1265                           
  1266                           ;lcd.h: 158: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  1267  007E72  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1268  007E76  90D8               	bcf	status,0,c
  1269  007E78  3223               	rrcf	??_Lcd_Cmd,f,c
  1270  007E7A  0E01               	movlw	1
  1271  007E7C  1623               	andwf	??_Lcd_Cmd,f,c
  1272  007E7E  3A23               	swapf	??_Lcd_Cmd,f,c
  1273  007E80  4623               	rlncf	??_Lcd_Cmd,f,c
  1274  007E82  5083               	movf	3971,w,c	;volatile
  1275  007E84  1823               	xorwf	??_Lcd_Cmd,w,c
  1276  007E86  0BDF               	andlw	-33
  1277  007E88  1823               	xorwf	??_Lcd_Cmd,w,c
  1278  007E8A  6E83               	movwf	3971,c	;volatile
  1279  007E8C  C025  F023         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1280  007E90  0E01               	movlw	1
  1281  007E92  1623               	andwf	??_Lcd_Cmd,f,c
  1282  007E94  3A23               	swapf	??_Lcd_Cmd,f,c
  1283  007E96  5083               	movf	3971,w,c	;volatile
  1284  007E98  1823               	xorwf	??_Lcd_Cmd,w,c
  1285  007E9A  0BEF               	andlw	-17
  1286  007E9C  1823               	xorwf	??_Lcd_Cmd,w,c
  1287  007E9E  6E83               	movwf	3971,c	;volatile
  1288                           
  1289                           ;lcd.h: 159: _delay(10);
  1290  007EA0  0E03               	movlw	3
  1291  007EA2                     u497:
  1292  007EA2  2EE8               	decfsz	wreg,f,c
  1293  007EA4  D7FE               	bra	u497
  1294  007EA6  F000               	nop	
  1295                           
  1296                           ;lcd.h: 160: PORTDbits.RD0 = 1; _delay((unsigned long)((5)*(16000000/4000000.0))); PORTD
      +                          bits.RD0 = 0;
  1297  007EA8  8083               	bsf	3971,0,c	;volatile
  1298  007EAA  0E06               	movlw	6
  1299  007EAC                     u507:
  1300  007EAC  2EE8               	decfsz	wreg,f,c
  1301  007EAE  D7FE               	bra	u507
  1302  007EB0  F000 F000          	nop2	
  1303  007EB4  9083               	bcf	3971,0,c	;volatile
  1304                           
  1305                           ;lcd.h: 161: _delay((unsigned long)((5500)*(16000000/4000000.0)));
  1306  007EB6  0E1D               	movlw	29
  1307  007EB8  6E23               	movwf	??_Lcd_Cmd& (0+255),c
  1308  007EBA  0E91               	movlw	145
  1309  007EBC                     u517:
  1310  007EBC  2EE8               	decfsz	wreg,f,c
  1311  007EBE  D7FE               	bra	u517
  1312  007EC0  2E23               	decfsz	??_Lcd_Cmd& (0+255),f,c
  1313  007EC2  D7FC               	bra	u517
  1314  007EC4  F000               	nop	
  1315  007EC6  0012               	return		;funcret
  1316  007EC8                     __end_of_Lcd_Cmd:
  1317                           	opt stack 0
  1318  0000                     tblptru	equ	0xFF8
  1319                           tblptrh	equ	0xFF7
  1320                           tblptrl	equ	0xFF6
  1321                           tablat	equ	0xFF5
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           indf2	equ	0xFDF
  1327                           fsr2h	equ	0xFDA
  1328                           fsr2l	equ	0xFD9
  1329                           status	equ	0xFD8
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postdec1	equ	0xFE5
  1337                           fsr1l	equ	0xFE1
  1338                           indf2	equ	0xFDF
  1339                           fsr2h	equ	0xFDA
  1340                           fsr2l	equ	0xFD9
  1341                           status	equ	0xFD8
  1342                           
  1343                           	psect	rparam
  1344  0000                     tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           postinc0	equ	0xFEE
  1349                           wreg	equ	0xFE8
  1350                           postdec1	equ	0xFE5
  1351                           fsr1l	equ	0xFE1
  1352                           indf2	equ	0xFDF
  1353                           fsr2h	equ	0xFDA
  1354                           fsr2l	equ	0xFD9
  1355                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> Mensaje2(COMRAM[17]), Mensaje1(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1327
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                            _SWdelay
                              _SetUp
 ---------------------------------------------------------------------------------
 (1) _SetUp                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SWdelay                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     837
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _SWdelay
   _SetUp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      2A       1       44.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A      15        0.0%
DATA                 0      0      2A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 27 22:59:57 2018

                     l40 7C4C                       l32 7C2A                       l33 7C10  
                     l34 7C44                       l27 7CEC                       l35 7C16  
                     l36 7C1C                       l37 7C22                       l70 7BEE  
                     l39 7C5E                       l71 7BFC                       l81 7B9E  
                     l82 7B8C                       l84 7BB6                       l85 7BA4  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000             __CFG_CPB$OFF 000000                      u205 7F14  
                    u155 7DA8                      u307 7BAA                      u165 7DC2  
                    u317 7F4A                      u175 7DE6                      u407 7CBC  
                    u327 7F54                      u417 7CCC                      u337 7FD0  
                    u185 7ED6             __CFG_CPD$OFF 000000                      u507 7EAC  
                    u427 7CDC                      u347 7FDA                      u195 7EF0  
                    u517 7EBC                      u437 7D06                      u357 7FE6  
                    u447 7D20                      u367 7FF4                      u457 7D4C  
                    u377 7C8C                      u297 7B92                      u467 7D66  
                    u387 7C9C                      u477 7E1C                      u397 7CAC  
                    u487 7E26                      u497 7EA2             __CFG_BORV$18 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     _LATB 000F8A  
           __CFG_PWRT$ON 000000                     _main 7BBC                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000          __end_of_Lcd_Cmd 7EC8  
        __end_of_Lcd_Out 7C6E            __CFG_MCLRE$ON 000000             ___param_bank 000000  
        __end_of_SWdelay 7BBC               _Lcd_Chr_CP 7EC8                    ?_main 0023  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000                    _SetUp 7B2A  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  status 000FD8           __CFG_HFOFST$ON 000000         __end_of_Lcd_Init 7D9A  
        __initialization 7B60             __end_of_main 7C0C                   ??_main 002B  
          __activetblptr 000002                   ?_SetUp 0023           __CFG_WDTEN$OFF 000000  
              ??_Lcd_Cmd 0023                ??_Lcd_Out 0029                ??_SWdelay 0023  
         __CFG_XINST$OFF 000000              ?_Lcd_Chr_CP 0023           __CFG_STVREN$ON 000000  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7B80  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0023  
          __end_of_SetUp 7B3E                  ??_SetUp 0023                ?_Lcd_Init 0023  
    __size_of_Lcd_Chr_CP 0138               ??_Lcd_Init 0026                  _Lcd_Cmd 7D9A  
                _Lcd_Out 7C0C                  _SWdelay 7B8A                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7B60                  __ramtop 0600  
                __ptext0 7BBC                  __ptext1 7B2A                  __ptext2 7B8A  
                __ptext3 7C0C                  __ptext4 7EC8                  __ptext5 7C6E  
                __ptext6 7D9A     end_of_initialization 7B80            __Lmediumconst 0000  
           ??_Lcd_Chr_CP 0023                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81                _PORTDbits 000F83                _TRISBbits 000F93  
              _TRISDbits 000F95       __end_of_Lcd_Chr_CP 8000            __pidataCOMRAM 7B3E  
    start_initialization 7B60            Lcd_Out@buffer 0027        __size_of_Lcd_Init 012C  
       __CFG_LPT1OSC$OFF 000000                 ?_Lcd_Cmd 0023                 ?_Lcd_Out 0026  
               ?_SWdelay 0023        __CFG_CCP2MX$PORTC 000000           __size_of_SetUp 0014  
               Lcd_Out@x 0026         __CFG_WDTPS$32768 000000                 Lcd_Out@y 0029  
           Lcd_Init@data 0027                 _Lcd_Init 7C6E                copy_data0 7B74  
               _Mensaje1 0012                 _Mensaje2 0001         __size_of_Lcd_Cmd 012E  
       __size_of_Lcd_Out 0062         __size_of_SWdelay 0032                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000               _ANSELHbits 000F7F  
         Lcd_Chr_CP@data 0025              Lcd_Cmd@data 0025            __size_of_main 0050  
            Lcd_Out@data 002A               _OSCCONbits 000FD3        __CFG_FOSC$INTIO67 000000  

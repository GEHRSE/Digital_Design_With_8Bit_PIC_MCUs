

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 17 13:41:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F8722 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	nvCOMRAM
    50  000004                     __pnvCOMRAM:
    51                           	opt stack 0
    52  000004                     _dato:
    53                           	opt stack 0
    54  000004                     	ds	1
    55  0000                     _EECON2	set	4007
    56  0000                     _INTCONbits	set	4082
    57  0000                     _EEDATA	set	4008
    58  0000                     _EECON1bits	set	4006
    59  0000                     _EEADR	set	4009
    60  0000                     _EEADRH	set	4010
    61  0000                     _ADCON1bits	set	4033
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  01FF9A                     __pcinit:
    67                           	opt stack 0
    68  01FF9A                     start_initialization:
    69                           	opt stack 0
    70  01FF9A                     __initialization:
    71                           	opt stack 0
    72  01FF9A                     end_of_initialization:
    73                           	opt stack 0
    74  01FF9A                     __end_of__initialization:
    75                           	opt stack 0
    76  01FF9A  0100               	movlb	0
    77  01FF9C  EFEB  F0FF         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	opt stack 0
    82  000001                     EEPROMRead@address:
    83                           	opt stack 0
    84  000001                     EEPROMWrite@address:
    85                           	opt stack 0
    86                           
    87                           ; 2 bytes @ 0x0
    88  000001                     	ds	2
    89  000003                     EEPROMWrite@dato:
    90                           	opt stack 0
    91                           
    92                           ; 1 bytes @ 0x2
    93  000003                     	ds	1
    94  000004                     
    95                           ; 1 bytes @ 0x3
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 17 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called:    1
   121 ;; This function calls:
   122 ;;		_EEPROMRead
   123 ;;		_EEPROMWrite
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130  01FFD6                     __ptext0:
   131                           	opt stack 0
   132  01FFD6                     _main:
   133                           	opt stack 30
   134                           
   135                           ;main.c: 19: ADCON1bits.PCFG = 0b1111;
   136                           
   137                           ;incstack = 0
   138  01FFD6  80C1               	bsf	4033,0,c	;volatile
   139  01FFD8  82C1               	bsf	4033,1,c	;volatile
   140  01FFDA  84C1               	bsf	4033,2,c	;volatile
   141  01FFDC  86C1               	bsf	4033,3,c	;volatile
   142                           
   143                           ;main.c: 20: EEPROMWrite(0x051,0x17);
   144  01FFDE  0E00               	movlw	0
   145  01FFE0  6E02               	movwf	EEPROMWrite@address+1,c
   146  01FFE2  0E51               	movlw	81
   147  01FFE4  6E01               	movwf	EEPROMWrite@address,c
   148  01FFE6  0E17               	movlw	23
   149  01FFE8  6E03               	movwf	EEPROMWrite@dato,c
   150  01FFEA  ECD9  F0FF         	call	_EEPROMWrite	;wreg free
   151                           
   152                           ;main.c: 21: dato = EEPROMRead(0x051);
   153  01FFEE  0E00               	movlw	0
   154  01FFF0  6E02               	movwf	EEPROMRead@address+1,c
   155  01FFF2  0E51               	movlw	81
   156  01FFF4  6E01               	movwf	EEPROMRead@address,c
   157  01FFF6  ECD0  F0FF         	call	_EEPROMRead	;wreg free
   158  01FFFA  6E04               	movwf	_dato,c
   159  01FFFC  EF00  F000         	goto	start
   160  020000                     __end_of_main:
   161                           	opt stack 0
   162                           
   163 ;; *************** function _EEPROMWrite *****************
   164 ;; Defined at:
   165 ;;		line 34 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;  address         2    0[COMRAM] unsigned int 
   168 ;;  dato            1    2[COMRAM] unsigned char 
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   184 ;;Total ram usage:        3 bytes
   185 ;; Hardware stack levels used:    1
   186 ;; This function calls:
   187 ;;		Nothing
   188 ;; This function is called by:
   189 ;;		_main
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text1
   194  01FFB2                     __ptext1:
   195                           	opt stack 0
   196  01FFB2                     _EEPROMWrite:
   197                           	opt stack 30
   198                           
   199                           ;main.c: 36: EEADRH = (uint8_t)(address>>8);
   200                           
   201                           ;incstack = 0
   202  01FFB2  5002               	movf	EEPROMWrite@address+1,w,c
   203  01FFB4  6EAA               	movwf	4010,c	;volatile
   204                           
   205                           ;main.c: 37: EEADR = (uint8_t)address;
   206  01FFB6  C001  FFA9         	movff	EEPROMWrite@address,4009	;volatile
   207                           
   208                           ;main.c: 38: EEDATA = dato;
   209  01FFBA  C003  FFA8         	movff	EEPROMWrite@dato,4008	;volatile
   210                           
   211                           ;main.c: 39: EECON1bits.EEPGD = 0;
   212  01FFBE  9EA6               	bcf	4006,7,c	;volsfr
   213                           
   214                           ;main.c: 40: EECON1bits.CFGS = 0;
   215  01FFC0  9CA6               	bcf	4006,6,c	;volsfr
   216                           
   217                           ;main.c: 41: EECON1bits.WREN = 1;
   218  01FFC2  84A6               	bsf	4006,2,c	;volsfr
   219                           
   220                           ;main.c: 43: INTCONbits.GIE = 0;
   221  01FFC4  9EF2               	bcf	intcon,7,c	;volatile
   222                           
   223                           ;main.c: 44: EECON2 = 0x55;
   224  01FFC6  0E55               	movlw	85
   225  01FFC8  6EA7               	movwf	4007,c	;volsfr
   226                           
   227                           ;main.c: 45: EECON2 = 0xAA;
   228  01FFCA  0EAA               	movlw	170
   229  01FFCC  6EA7               	movwf	4007,c	;volsfr
   230                           
   231                           ;main.c: 46: EECON1bits.WR = 1;
   232  01FFCE  82A6               	bsf	4006,1,c	;volsfr
   233                           
   234                           ;main.c: 47: INTCONbits.GIE = 1;
   235  01FFD0  8EF2               	bsf	intcon,7,c	;volatile
   236                           
   237                           ;main.c: 48: EECON1bits.WREN = 0;
   238  01FFD2  94A6               	bcf	4006,2,c	;volsfr
   239  01FFD4  0012               	return		;funcret
   240  01FFD6                     __end_of_EEPROMWrite:
   241                           	opt stack 0
   242                           intcon	equ	0xFF2
   243                           
   244 ;; *************** function _EEPROMRead *****************
   245 ;; Defined at:
   246 ;;		line 24 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;  address         2    0[COMRAM] unsigned int 
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      unsigned char 
   253 ;; Registers used:
   254 ;;		wreg, status,2
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;Total ram usage:        2 bytes
   265 ;; Hardware stack levels used:    1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text2
   274  01FFA0                     __ptext2:
   275                           	opt stack 0
   276  01FFA0                     _EEPROMRead:
   277                           	opt stack 30
   278                           
   279                           ;main.c: 26: EEADRH = (uint8_t)(address>>8);
   280                           
   281                           ;incstack = 0
   282  01FFA0  5002               	movf	EEPROMRead@address+1,w,c
   283  01FFA2  6EAA               	movwf	4010,c	;volatile
   284                           
   285                           ;main.c: 27: EEADR = (uint8_t)address;
   286  01FFA4  C001  FFA9         	movff	EEPROMRead@address,4009	;volatile
   287                           
   288                           ;main.c: 28: EECON1bits.EEPGD = 0;
   289  01FFA8  9EA6               	bcf	4006,7,c	;volsfr
   290                           
   291                           ;main.c: 29: EECON1bits.CFGS = 0;
   292  01FFAA  9CA6               	bcf	4006,6,c	;volsfr
   293                           
   294                           ;main.c: 30: EECON1bits.RD = 1;
   295  01FFAC  80A6               	bsf	4006,0,c	;volsfr
   296                           
   297                           ;main.c: 31: return EEDATA;
   298  01FFAE  50A8               	movf	4008,w,c	;volatile
   299  01FFB0  0012               	return	
   300  01FFB2                     __end_of_EEPROMRead:
   301                           	opt stack 0
   302  0000                     intcon	equ	0xFF2
   303                           intcon	equ	0xFF2
   304                           
   305                           	psect	rparam
   306  0000                     intcon	equ	0xFF2


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EEPROMWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     338
                         _EEPROMRead
                        _EEPROMWrite
 ---------------------------------------------------------------------------------
 (1) _EEPROMWrite                                          3     0      3     218
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EEPROMRead                                           2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMRead
   _EEPROMWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       4       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
ABS                  0      0       4      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM             F5F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 17 13:41:50 2018

                   _dato 0004                     _main FFD6                     start 0000  
    __size_of_EEPROMRead 0012             ___param_bank 000000                    ?_main 0001  
                  _EEADR 000FA9          EEPROMWrite@dato 0003     __size_of_EEPROMWrite 0024  
        __initialization FF9A             __end_of_main 0000                   ??_main 0004  
          __activetblptr 000000                   _EEADRH 000FAA                   _EEDATA 000FA8  
                 _EECON2 000FA7             ??_EEPROMRead 0003               __accesstop 0060  
__end_of__initialization FF9A            ___rparam_used 000001       __end_of_EEPROMRead FFB2  
         __pcstackCOMRAM 0001               __pnvCOMRAM 0004                  __Hparam 0000  
                __Lparam 0000                  __pcinit FF9A                  __ramtop 1000  
                __ptext0 FFD6                  __ptext1 FFB2                  __ptext2 FFA0  
   end_of_initialization FF9A            ??_EEPROMWrite 0004      __end_of_EEPROMWrite FFD6  
    start_initialization FF9A              _EEPROMWrite FFB2       EEPROMWrite@address 0001  
             _ADCON1bits 000FC1        EEPROMRead@address 0001               _EECON1bits 000FA6  
               __Hrparam 0000                 __Lrparam 0000               _EEPROMRead FFA0  
          __size_of_main 002A               _INTCONbits 000FF2             ?_EEPROMWrite 0001  
            ?_EEPROMRead 0001  

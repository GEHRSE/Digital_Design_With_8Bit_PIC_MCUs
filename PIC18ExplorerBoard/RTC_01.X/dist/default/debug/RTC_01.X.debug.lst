

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 01 22:36:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F8722 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _RCSTAbits	set	4011
    74  0000                     _RCREG	set	4014
    75  0000                     _TXREG	set	4013
    76  0000                     _SPBRG	set	4015
    77  0000                     _TXSTA	set	4012
    78  0000                     _RCSTA	set	4011
    79  0000                     _INTCONbits	set	4082
    80  0000                     _RCONbits	set	4048
    81  0000                     _TMR1L	set	4046
    82  0000                     _TMR1H	set	4047
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _T1CONbits	set	4045
    86  0000                     _LATCbits	set	3979
    87  0000                     _LATAbits	set	3977
    88  0000                     _TRISCbits	set	3988
    89  0000                     _LATFbits	set	3982
    90  0000                     _TRISFbits	set	3991
    91  0000                     _PORTBbits	set	3969
    92  0000                     _PORTAbits	set	3968
    93  0000                     _ADCON1bits	set	4033
    94  0000                     _PORTD	set	3971
    95  0000                     _TRISD	set	3989
    96  0000                     _TRISBbits	set	3987
    97  0000                     _LATB	set	3978
    98  0000                     _TRISAbits	set	3986
    99  0000                     _LATA	set	3977
   100                           
   101                           	psect	smallconst
   102  001000                     __psmallconst:
   103                           	opt stack 0
   104  001000  00                 	db	0
   105  001001                     STR_7:
   106  001001  20                 	db	32
   107  001002  50                 	db	80	;'P'
   108  001003  49                 	db	73	;'I'
   109  001004  43                 	db	67	;'C'
   110  001005  31                 	db	49	;'1'
   111  001006  38                 	db	56	;'8'
   112  001007  20                 	db	32
   113  001008  45                 	db	69	;'E'
   114  001009  78                 	db	120	;'x'
   115  00100A  70                 	db	112	;'p'
   116  00100B  6C                 	db	108	;'l'
   117  00100C  6F                 	db	111	;'o'
   118  00100D  72                 	db	114	;'r'
   119  00100E  65                 	db	101	;'e'
   120  00100F  72                 	db	114	;'r'
   121  001010  20                 	db	32
   122  001011  00                 	db	0
   123  001012                     STR_1:
   124  001012  20                 	db	32
   125  001013  20                 	db	32
   126  001014  20                 	db	32
   127  001015  20                 	db	32
   128  001016  20                 	db	32
   129  001017  43                 	db	67	;'C'
   130  001018  6C                 	db	108	;'l'
   131  001019  6F                 	db	111	;'o'
   132  00101A  63                 	db	99	;'c'
   133  00101B  6B                 	db	107	;'k'
   134  00101C  20                 	db	32
   135  00101D  20                 	db	32
   136  00101E  20                 	db	32
   137  00101F  20                 	db	32
   138  001020  20                 	db	32
   139  001021  20                 	db	32
   140  001022  00                 	db	0
   141  001023                     STR_5:
   142  001023  52                 	db	82	;'R'
   143  001024  42                 	db	66	;'B'
   144  001025  30                 	db	48	;'0'
   145  001026  3D                 	db	61	;'='
   146  001027  20                 	db	32
   147  001028  2B                 	db	43
   148  001029  2B                 	db	43
   149  00102A  20                 	db	32
   150  00102B  52                 	db	82	;'R'
   151  00102C  41                 	db	65	;'A'
   152  00102D  35                 	db	53	;'5'
   153  00102E  3D                 	db	61	;'='
   154  00102F  20                 	db	32
   155  001030  2D                 	db	45
   156  001031  2D                 	db	45
   157  001032  3E                 	db	62	;'>'
   158  001033  00                 	db	0
   159  001034                     STR_4:
   160  001034  52                 	db	82	;'R'
   161  001035  42                 	db	66	;'B'
   162  001036  30                 	db	48	;'0'
   163  001037  3D                 	db	61	;'='
   164  001038  4D                 	db	77	;'M'
   165  001039  65                 	db	101	;'e'
   166  00103A  6E                 	db	110	;'n'
   167  00103B  75                 	db	117	;'u'
   168  00103C  20                 	db	32
   169  00103D  52                 	db	82	;'R'
   170  00103E  41                 	db	65	;'A'
   171  00103F  35                 	db	53	;'5'
   172  001040  3D                 	db	61	;'='
   173  001041  53                 	db	83	;'S'
   174  001042  65                 	db	101	;'e'
   175  001043  74                 	db	116	;'t'
   176  001044  00                 	db	0
   177  001045                     STR_2:
   178  001045  52                 	db	82	;'R'
   179  001046  42                 	db	66	;'B'
   180  001047  30                 	db	48	;'0'
   181  001048  3D                 	db	61	;'='
   182  001049  4E                 	db	78	;'N'
   183  00104A  6F                 	db	111	;'o'
   184  00104B  77                 	db	119	;'w'
   185  00104C  20                 	db	32
   186  00104D  52                 	db	82	;'R'
   187  00104E  41                 	db	65	;'A'
   188  00104F  35                 	db	53	;'5'
   189  001050  3D                 	db	61	;'='
   190  001051  4E                 	db	78	;'N'
   191  001052  65                 	db	101	;'e'
   192  001053  78                 	db	120	;'x'
   193  001054  74                 	db	116	;'t'
   194  001055  00                 	db	0
   195  001056                     STR_6:
   196  001056  20                 	db	32
   197  001057  20                 	db	32
   198  001058  4D                 	db	77	;'M'
   199  001059  50                 	db	80	;'P'
   200  00105A  55                 	db	85	;'U'
   201  00105B  73                 	db	115	;'s'
   202  00105C  20                 	db	32
   203  00105D  79                 	db	121	;'y'
   204  00105E  20                 	db	32
   205  00105F  4D                 	db	77	;'M'
   206  001060  43                 	db	67	;'C'
   207  001061  55                 	db	85	;'U'
   208  001062  73                 	db	115	;'s'
   209  001063  20                 	db	32
   210  001064  20                 	db	32
   211  001065  00                 	db	0
   212  001066                     STR_3:
   213  001066  20                 	db	32
   214  001067  20                 	db	32
   215  001068  20                 	db	32
   216  001069  20                 	db	32
   217  00106A  20                 	db	32
   218  00106B  20                 	db	32
   219  00106C  20                 	db	32
   220  00106D  20                 	db	32
   221  00106E  00                 	db	0
   222                           
   223                           ; #config settings
   224  00106F  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           	psect	cinit
   227  0016F4                     __pcinit:
   228                           	opt stack 0
   229  0016F4                     start_initialization:
   230                           	opt stack 0
   231  0016F4                     __initialization:
   232                           	opt stack 0
   233                           
   234                           ; Clear objects allocated to COMRAM (8 bytes)
   235  0016F4  EE00  F01C         	lfsr	0,__pbssCOMRAM
   236  0016F8  0E08               	movlw	8
   237  0016FA                     clear_0:
   238  0016FA  6AEE               	clrf	postinc0,c
   239  0016FC  06E8               	decf	wreg,f,c
   240  0016FE  E1FD               	bnz	clear_0
   241  001700                     end_of_initialization:
   242                           	opt stack 0
   243  001700                     __end_of__initialization:
   244                           	opt stack 0
   245  001700  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246  001702  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247  001704  0100               	movlb	0
   248  001706  EF33  F00B         	goto	_main	;jump to C main() function
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  00001C                     __pbssCOMRAM:
   254                           	opt stack 0
   255  00001C                     _State:
   256                           	opt stack 0
   257  00001C                     	ds	1
   258  00001D                     _StateMachine:
   259                           	opt stack 0
   260  00001D                     	ds	1
   261  00001E                     _Time:
   262                           	opt stack 0
   263  00001E                     	ds	1
   264  00001F                     _timeset:
   265                           	opt stack 0
   266  00001F                     	ds	1
   267  000020                     _sec:
   268                           	opt stack 0
   269  000020                     	ds	1
   270  000021                     _min:
   271                           	opt stack 0
   272  000021                     	ds	1
   273  000022                     _hr:
   274                           	opt stack 0
   275  000022                     	ds	1
   276  000023                     _Timer1Flag:
   277                           	opt stack 0
   278  000023                     	ds	1
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	cstackCOMRAM
   283  000001                     __pcstackCOMRAM:
   284                           	opt stack 0
   285  000001                     ??_InterruptManager:
   286                           
   287                           ; 1 bytes @ 0x0
   288  000001                     	ds	18
   289  000013                     ??_IntroDelay:
   290  000013                     ??_SWdelay:
   291  000013                     ?___awdiv:
   292                           	opt stack 0
   293  000013                     ?___awmod:
   294                           	opt stack 0
   295  000013                     SendByteBBSPI@output:
   296                           	opt stack 0
   297  000013                     ___awdiv@dividend:
   298                           	opt stack 0
   299  000013                     ___awmod@dividend:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x12
   303  000013                     	ds	1
   304  000014                     SendByteBBSPI@bitcount:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x13
   308  000014                     	ds	1
   309  000015                     SendByteBBSPI@input:
   310                           	opt stack 0
   311  000015                     IntroDelay@i:
   312                           	opt stack 0
   313  000015                     ___awdiv@divisor:
   314                           	opt stack 0
   315  000015                     ___awmod@divisor:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x14
   319  000015                     	ds	1
   320  000016                     Port_BBSPIInit@port_dir:
   321                           	opt stack 0
   322  000016                     WritePort_BBSPI@a:
   323                           	opt stack 0
   324  000016                     IntroDelay@n:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x15
   328  000016                     	ds	1
   329  000017                     WritePort_BBSPI@port_add:
   330                           	opt stack 0
   331  000017                     IntroDelay@aux:
   332                           	opt stack 0
   333  000017                     ___awdiv@counter:
   334                           	opt stack 0
   335  000017                     ___awmod@counter:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x16
   339  000017                     	ds	1
   340  000018                     ??_LCDPutInst:
   341  000018                     ??_LCDPutChar:
   342  000018                     ___awdiv@sign:
   343                           	opt stack 0
   344  000018                     ___awmod@sign:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x17
   348  000018                     	ds	1
   349  000019                     LCDPutChar@ch:
   350                           	opt stack 0
   351  000019                     LCDPutInst@ch:
   352                           	opt stack 0
   353  000019                     ___awdiv@quotient:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x18
   357  000019                     	ds	1
   358  00001A                     ??_LCDInit:
   359  00001A                     LCDPutStr@ptr:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x19
   363  00001A                     	ds	2
   364  00001C                     postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           
   367                           ; 1 bytes @ 0x1B
   368 ;;
   369 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   370 ;;
   371 ;; *************** function _main *****************
   372 ;; Defined at:
   373 ;;		line 20 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels required when called:   10
   393 ;; This function calls:
   394 ;;		_Clock
   395 ;;		_Intro
   396 ;;		_SysInitialize
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text0
   403  001666                     __ptext0:
   404                           	opt stack 0
   405  001666                     _main:
   406                           	opt stack 21
   407                           
   408                           ;main.c: 22: SysInitialize();
   409                           
   410                           ;incstack = 0
   411  001666  EC96  F00B         	call	_SysInitialize	;wreg free
   412                           
   413                           ;main.c: 25: {
   414                           ;main.c: 26: switch(State)
   415                           
   416                           ;main.c: 24: while(1)
   417  00166A  D005               	goto	l1714
   418  00166C  EC06  F00B         	call	_Intro	;wreg free
   419                           
   420                           ;main.c: 29: break;
   421  001670  D002               	goto	l1714
   422  001672  ECC6  F00A         	call	_Clock	;wreg free
   423  001676                     l1714:
   424                           
   425                           ;main.c: 32: }
   426  001676  501C               	movf	_State,w,c
   427                           
   428                           ; Switch size 1, requested type "space"
   429                           ; Number of cases is 2, Range of values is 0 to 1
   430                           ; switch strategies available:
   431                           ; Name         Instructions Cycles
   432                           ; simple_byte            7     4 (average)
   433                           ;	Chosen strategy is simple_byte
   434  001678  0A00               	xorlw	0	; case 0
   435  00167A  B4D8               	btfsc	status,2,c
   436  00167C  D7F7               	goto	l29
   437  00167E  0A01               	xorlw	1	; case 1
   438  001680  B4D8               	btfsc	status,2,c
   439  001682  D7F7               	goto	l31
   440  001684  D7F8               	goto	l1714
   441  001686                     __end_of_main:
   442                           	opt stack 0
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           status	equ	0xFD8
   446                           
   447 ;; *************** function _SysInitialize *****************
   448 ;; Defined at:
   449 ;;		line 4 in file "SystemInitialize.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used:    1
   469 ;; Hardware stack levels required when called:    4
   470 ;; This function calls:
   471 ;;		_InterruptInitialize
   472 ;;		_PortInitialize
   473 ;;		_TMR1Initialize
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480  00172C                     __ptext1:
   481                           	opt stack 0
   482  00172C                     _SysInitialize:
   483                           	opt stack 26
   484                           
   485                           ;SystemInitialize.c: 6: PortInitialize();
   486                           
   487                           ;incstack = 0
   488  00172C  EC43  F00B         	call	_PortInitialize	;wreg free
   489                           
   490                           ;SystemInitialize.c: 7: InterruptInitialize();
   491  001730  EC9D  F00B         	call	_InterruptInitialize	;wreg free
   492                           
   493                           ;SystemInitialize.c: 8: TMR1Initialize();
   494  001734  EC52  F00B         	call	_TMR1Initialize	;wreg free
   495  001738  0012               	return	
   496  00173A                     __end_of_SysInitialize:
   497                           	opt stack 0
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           status	equ	0xFD8
   501                           
   502 ;; *************** function _TMR1Initialize *****************
   503 ;; Defined at:
   504 ;;		line 8 in file "tmr1.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    3
   525 ;; This function calls:
   526 ;;		_TMR1Start
   527 ;; This function is called by:
   528 ;;		_SysInitialize
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text2
   533  0016A4                     __ptext2:
   534                           	opt stack 0
   535  0016A4                     _TMR1Initialize:
   536                           	opt stack 26
   537                           
   538                           ;tmr1.c: 14: T1CONbits.TMR1ON = 0;
   539                           
   540                           ;incstack = 0
   541  0016A4  90CD               	bcf	4045,0,c	;volatile
   542                           
   543                           ;tmr1.c: 20: T1CONbits.TMR1CS = 1;
   544  0016A6  82CD               	bsf	4045,1,c	;volatile
   545                           
   546                           ;tmr1.c: 26: T1CONbits.T1OSCEN = 1;
   547  0016A8  86CD               	bsf	4045,3,c	;volatile
   548                           
   549                           ;tmr1.c: 34: T1CONbits.T1CKPS = 0b00;
   550  0016AA  0ECF               	movlw	-49
   551  0016AC  16CD               	andwf	4045,f,c	;volatile
   552                           
   553                           ;tmr1.c: 40: PIR1bits.TMR1IF = 0;
   554  0016AE  909E               	bcf	3998,0,c	;volatile
   555                           
   556                           ;tmr1.c: 46: PIE1bits.TMR1IE = 1;
   557  0016B0  809D               	bsf	3997,0,c	;volatile
   558                           
   559                           ;tmr1.c: 49: TMR1H = 0x80;
   560  0016B2  0E80               	movlw	128
   561  0016B4  6ECF               	movwf	4047,c	;volatile
   562                           
   563                           ;tmr1.c: 50: TMR1L = 0x00;
   564  0016B6  0E00               	movlw	0
   565  0016B8  6ECE               	movwf	4046,c	;volatile
   566                           
   567                           ;tmr1.c: 52: TMR1Start();
   568  0016BA  ECA2  F00B         	call	_TMR1Start	;wreg free
   569  0016BE  0012               	return	
   570  0016C0                     __end_of_TMR1Initialize:
   571                           	opt stack 0
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function _TMR1Start *****************
   577 ;; Defined at:
   578 ;;		line 61 in file "tmr1.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		None
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    2
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_TMR1Initialize
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text3
   607  001744                     __ptext3:
   608                           	opt stack 0
   609  001744                     _TMR1Start:
   610                           	opt stack 26
   611                           
   612                           ;tmr1.c: 63: T1CONbits.TMR1ON = 1;
   613                           
   614                           ;incstack = 0
   615  001744  80CD               	bsf	4045,0,c	;volatile
   616                           
   617                           ;tmr1.c: 65: return;
   618  001746  0012               	return		;funcret
   619  001748                     __end_of_TMR1Start:
   620                           	opt stack 0
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           status	equ	0xFD8
   624                           
   625 ;; *************** function _PortInitialize *****************
   626 ;; Defined at:
   627 ;;		line 12 in file "SystemInitialize.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_SysInitialize
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text4
   656  001686                     __ptext4:
   657                           	opt stack 0
   658  001686                     _PortInitialize:
   659                           	opt stack 27
   660                           
   661                           ;SystemInitialize.c: 14: LATA = 0;
   662                           
   663                           ;incstack = 0
   664  001686  0E00               	movlw	0
   665  001688  6E89               	movwf	3977,c	;volatile
   666                           
   667                           ;SystemInitialize.c: 15: TRISAbits.TRISA5 = 1;
   668  00168A  8A92               	bsf	3986,5,c	;volatile
   669                           
   670                           ;SystemInitialize.c: 16: LATB = 0;
   671  00168C  0E00               	movlw	0
   672  00168E  6E8A               	movwf	3978,c	;volatile
   673                           
   674                           ;SystemInitialize.c: 17: TRISBbits.TRISB0 = 1;
   675  001690  8093               	bsf	3987,0,c	;volatile
   676                           
   677                           ;SystemInitialize.c: 18: TRISD = 0;
   678  001692  0E00               	movlw	0
   679  001694  6E95               	movwf	3989,c	;volatile
   680                           
   681                           ;SystemInitialize.c: 19: PORTD = 0x00;
   682  001696  0E00               	movlw	0
   683  001698  6E83               	movwf	3971,c	;volatile
   684                           
   685                           ;SystemInitialize.c: 21: ADCON1bits.PCFG = 0b1111;
   686  00169A  80C1               	bsf	4033,0,c	;volatile
   687  00169C  82C1               	bsf	4033,1,c	;volatile
   688  00169E  84C1               	bsf	4033,2,c	;volatile
   689  0016A0  86C1               	bsf	4033,3,c	;volatile
   690  0016A2  0012               	return	
   691  0016A4                     __end_of_PortInitialize:
   692                           	opt stack 0
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _InterruptInitialize *****************
   698 ;; Defined at:
   699 ;;		line 4 in file "InterruptManager.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		None
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    2
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_SysInitialize
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text5
   728  00173A                     __ptext5:
   729                           	opt stack 0
   730  00173A                     _InterruptInitialize:
   731                           	opt stack 27
   732                           
   733                           ;InterruptManager.c: 10: RCONbits.IPEN = 0;
   734                           
   735                           ;incstack = 0
   736  00173A  9ED0               	bcf	4048,7,c	;volatile
   737                           
   738                           ;InterruptManager.c: 22: PIE1bits.TMR1IE = 1;
   739  00173C  809D               	bsf	3997,0,c	;volatile
   740                           
   741                           ;InterruptManager.c: 24: (INTCONbits.PEIE = 1);
   742  00173E  8CF2               	bsf	intcon,6,c	;volatile
   743                           
   744                           ;InterruptManager.c: 25: (INTCONbits.GIE = 1);
   745  001740  8EF2               	bsf	intcon,7,c	;volatile
   746  001742  0012               	return		;funcret
   747  001744                     __end_of_InterruptInitialize:
   748                           	opt stack 0
   749                           intcon	equ	0xFF2
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           status	equ	0xFD8
   753                           
   754 ;; *************** function _Intro *****************
   755 ;; Defined at:
   756 ;;		line 12 in file "StateIntro.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;Total ram usage:        0 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    6
   777 ;; This function calls:
   778 ;;		_IntroDelay
   779 ;;		_LCDInit
   780 ;;		_LCDPutInst
   781 ;;		_LCDPutStr
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text6
   788  00160C                     __ptext6:
   789                           	opt stack 0
   790  00160C                     _Intro:
   791                           	opt stack 24
   792                           
   793                           ;StateIntro.c: 15: LCDInit();
   794                           
   795                           ;incstack = 0
   796  00160C  EC3E  F00A         	call	_LCDInit	;wreg free
   797                           
   798                           ;StateIntro.c: 18: LCDPutInst(0x80);
   799  001610  0E80               	movlw	128
   800  001612  EC0B  F00A         	call	_LCDPutInst
   801                           
   802                           ;StateIntro.c: 19: LCDPutStr("  MPUs y MCUs  ");
   803  001616  0E56               	movlw	low STR_6
   804  001618  6E1A               	movwf	LCDPutStr@ptr,c
   805  00161A  0E10               	movlw	high STR_6
   806  00161C  6E1B               	movwf	LCDPutStr@ptr+1,c
   807  00161E  ECED  F00A         	call	_LCDPutStr	;wreg free
   808                           
   809                           ;StateIntro.c: 20: LCDPutInst(0xC0);
   810  001622  0EC0               	movlw	192
   811  001624  EC0B  F00A         	call	_LCDPutInst
   812                           
   813                           ;StateIntro.c: 21: LCDPutStr(" PIC18 Explorer ");
   814  001628  0E01               	movlw	low STR_7
   815  00162A  6E1A               	movwf	LCDPutStr@ptr,c
   816  00162C  0E10               	movlw	high STR_7
   817  00162E  6E1B               	movwf	LCDPutStr@ptr+1,c
   818  001630  ECED  F00A         	call	_LCDPutStr	;wreg free
   819                           
   820                           ;StateIntro.c: 24: IntroDelay();
   821  001634  EC6E  F00A         	call	_IntroDelay	;wreg free
   822                           
   823                           ;StateIntro.c: 27: State++;
   824  001638  2A1C               	incf	_State,f,c
   825  00163A  0012               	return		;funcret
   826  00163C                     __end_of_Intro:
   827                           	opt stack 0
   828                           intcon	equ	0xFF2
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           status	equ	0xFD8
   832                           
   833 ;; *************** function _LCDInit *****************
   834 ;; Defined at:
   835 ;;		line 45 in file "BBSPI_LCD.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        1 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    5
   856 ;; This function calls:
   857 ;;		_InitBBSPI
   858 ;;		_LCDPutInst
   859 ;;		_Port_BBSPIInit
   860 ;;		_WritePort_BBSPI
   861 ;; This function is called by:
   862 ;;		_Intro
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text7
   867  00147C                     __ptext7:
   868                           	opt stack 0
   869  00147C                     _LCDInit:
   870                           	opt stack 24
   871                           
   872                           ;BBSPI_LCD.c: 47: InitBBSPI();
   873                           
   874                           ;incstack = 0
   875  00147C  EC85  F00B         	call	_InitBBSPI	;wreg free
   876                           
   877                           ;BBSPI_LCD.c: 48: TRISFbits.TRISF6 = 0;
   878  001480  9C97               	bcf	3991,6,c	;volatile
   879                           
   880                           ;BBSPI_LCD.c: 49: LATFbits.LATF6 = 0;
   881  001482  9C8E               	bcf	3982,6,c	;volatile
   882                           
   883                           ;BBSPI_LCD.c: 50: _delay((unsigned long)((5)*(40000000/4000.0)));
   884  001484  0E41               	movlw	65
   885  001486  6E1A               	movwf	??_LCDInit& (0+255),c
   886  001488  0EEE               	movlw	238
   887  00148A                     u817:
   888  00148A  2EE8               	decfsz	wreg,f,c
   889  00148C  D7FE               	bra	u817
   890  00148E  2E1A               	decfsz	??_LCDInit& (0+255),f,c
   891  001490  D7FC               	bra	u817
   892  001492  D000               	nop2	
   893                           
   894                           ;BBSPI_LCD.c: 51: LATFbits.LATF6 = 1;
   895  001494  8C8E               	bsf	3982,6,c	;volatile
   896                           
   897                           ;BBSPI_LCD.c: 52: Port_BBSPIInit (0x00);
   898  001496  0E00               	movlw	0
   899  001498  EC60  F00B         	call	_Port_BBSPIInit
   900                           
   901                           ;BBSPI_LCD.c: 53: Port_BBSPIInit (0x01);
   902  00149C  0E01               	movlw	1
   903  00149E  EC60  F00B         	call	_Port_BBSPIInit
   904                           
   905                           ;BBSPI_LCD.c: 54: WritePort_BBSPI (0x12, 0);
   906  0014A2  0E00               	movlw	0
   907  0014A4  6E16               	movwf	WritePort_BBSPI@a,c
   908  0014A6  0E12               	movlw	18
   909  0014A8  EC6D  F00B         	call	_WritePort_BBSPI
   910                           
   911                           ;BBSPI_LCD.c: 55: _delay((unsigned long)((15)*(40000000/4000.0)));
   912  0014AC  0EC3               	movlw	195
   913  0014AE  6E1A               	movwf	??_LCDInit& (0+255),c
   914  0014B0  0ECD               	movlw	205
   915  0014B2                     u827:
   916  0014B2  2EE8               	decfsz	wreg,f,c
   917  0014B4  D7FE               	bra	u827
   918  0014B6  2E1A               	decfsz	??_LCDInit& (0+255),f,c
   919  0014B8  D7FC               	bra	u827
   920  0014BA  F000               	nop	
   921                           
   922                           ;BBSPI_LCD.c: 56: LCDPutInst(0x32);
   923  0014BC  0E32               	movlw	50
   924  0014BE  EC0B  F00A         	call	_LCDPutInst
   925                           
   926                           ;BBSPI_LCD.c: 57: LCDPutInst(0x3C);
   927  0014C2  0E3C               	movlw	60
   928  0014C4  EC0B  F00A         	call	_LCDPutInst
   929                           
   930                           ;BBSPI_LCD.c: 58: LCDPutInst(0x0C);
   931  0014C8  0E0C               	movlw	12
   932  0014CA  EC0B  F00A         	call	_LCDPutInst
   933                           
   934                           ;BBSPI_LCD.c: 59: LCDPutInst(0x01);
   935  0014CE  0E01               	movlw	1
   936  0014D0  EC0B  F00A         	call	_LCDPutInst
   937                           
   938                           ;BBSPI_LCD.c: 60: LCDPutInst(0x06);
   939  0014D4  0E06               	movlw	6
   940  0014D6  EC0B  F00A         	call	_LCDPutInst
   941  0014DA  0012               	return		;funcret
   942  0014DC                     __end_of_LCDInit:
   943                           	opt stack 0
   944                           intcon	equ	0xFF2
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           status	equ	0xFD8
   948                           
   949 ;; *************** function _Port_BBSPIInit *****************
   950 ;; Defined at:
   951 ;;		line 123 in file "BBSPI_LCD.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  port_dir        1    wreg     unsigned char 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  port_dir        1   21[COMRAM] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;Total ram usage:        1 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    3
   972 ;; This function calls:
   973 ;;		_SendByteBBSPI
   974 ;; This function is called by:
   975 ;;		_LCDInit
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text8
   980  0016C0                     __ptext8:
   981                           	opt stack 0
   982  0016C0                     _Port_BBSPIInit:
   983                           	opt stack 25
   984                           
   985                           ;incstack = 0
   986                           ;Port_BBSPIInit@port_dir stored from wreg
   987  0016C0  6E16               	movwf	Port_BBSPIInit@port_dir,c
   988                           
   989                           ;BBSPI_LCD.c: 128: LATAbits.LATA2 = 0;
   990  0016C2  9489               	bcf	3977,2,c	;volatile
   991                           
   992                           ;BBSPI_LCD.c: 129: SendByteBBSPI(0x40);
   993  0016C4  0E40               	movlw	64
   994  0016C6  EC9E  F00A         	call	_SendByteBBSPI
   995                           
   996                           ;BBSPI_LCD.c: 130: SendByteBBSPI(port_dir);
   997  0016CA  5016               	movf	Port_BBSPIInit@port_dir,w,c
   998  0016CC  EC9E  F00A         	call	_SendByteBBSPI
   999                           
  1000                           ;BBSPI_LCD.c: 131: SendByteBBSPI(0x00);
  1001  0016D0  0E00               	movlw	0
  1002  0016D2  EC9E  F00A         	call	_SendByteBBSPI
  1003                           
  1004                           ;BBSPI_LCD.c: 132: LATAbits.LATA2 = 1;
  1005  0016D6  8489               	bsf	3977,2,c	;volatile
  1006  0016D8  0012               	return		;funcret
  1007  0016DA                     __end_of_Port_BBSPIInit:
  1008                           	opt stack 0
  1009                           intcon	equ	0xFF2
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           status	equ	0xFD8
  1013                           
  1014 ;; *************** function _InitBBSPI *****************
  1015 ;; Defined at:
  1016 ;;		line 70 in file "BBSPI_LCD.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		None
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    2
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_LCDInit
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text9
  1045  00170A                     __ptext9:
  1046                           	opt stack 0
  1047  00170A                     _InitBBSPI:
  1048                           	opt stack 26
  1049                           
  1050                           ;BBSPI_LCD.c: 72: TRISAbits.TRISA2 = 0;
  1051                           
  1052                           ;incstack = 0
  1053  00170A  9492               	bcf	3986,2,c	;volatile
  1054                           
  1055                           ;BBSPI_LCD.c: 73: TRISCbits.TRISC4 = 1;
  1056  00170C  8894               	bsf	3988,4,c	;volatile
  1057                           
  1058                           ;BBSPI_LCD.c: 74: TRISCbits.TRISC5 = 0;
  1059  00170E  9A94               	bcf	3988,5,c	;volatile
  1060                           
  1061                           ;BBSPI_LCD.c: 75: TRISCbits.TRISC3 = 0;
  1062  001710  9694               	bcf	3988,3,c	;volatile
  1063                           
  1064                           ;BBSPI_LCD.c: 77: LATAbits.LATA2 = 1;
  1065  001712  8489               	bsf	3977,2,c	;volatile
  1066                           
  1067                           ;BBSPI_LCD.c: 78: LATCbits.LATC4 = 1;
  1068  001714  888B               	bsf	3979,4,c	;volatile
  1069                           
  1070                           ;BBSPI_LCD.c: 79: LATCbits.LATC5 = 0;
  1071  001716  9A8B               	bcf	3979,5,c	;volatile
  1072                           
  1073                           ;BBSPI_LCD.c: 80: LATCbits.LATC3 = 0;
  1074  001718  968B               	bcf	3979,3,c	;volatile
  1075  00171A  0012               	return		;funcret
  1076  00171C                     __end_of_InitBBSPI:
  1077                           	opt stack 0
  1078                           intcon	equ	0xFF2
  1079                           postinc0	equ	0xFEE
  1080                           wreg	equ	0xFE8
  1081                           status	equ	0xFD8
  1082                           
  1083 ;; *************** function _IntroDelay *****************
  1084 ;; Defined at:
  1085 ;;		line 36 in file "StateIntro.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  aux             1   22[COMRAM] unsigned char 
  1090 ;;  n               1   21[COMRAM] unsigned char 
  1091 ;;  i               1   20[COMRAM] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        5 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    2
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_Intro
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text10
  1116  0014DC                     __ptext10:
  1117                           	opt stack 0
  1118  0014DC                     _IntroDelay:
  1119                           	opt stack 27
  1120                           
  1121                           ;StateIntro.c: 38: unsigned char i;
  1122                           ;StateIntro.c: 39: unsigned char aux = 0;
  1123                           
  1124                           ;incstack = 0
  1125  0014DC  0E00               	movlw	0
  1126  0014DE  6E17               	movwf	IntroDelay@aux,c
  1127                           
  1128                           ;StateIntro.c: 40: unsigned char n = 0;
  1129  0014E0  0E00               	movlw	0
  1130  0014E2  6E16               	movwf	IntroDelay@n,c
  1131                           
  1132                           ;StateIntro.c: 42: for (i=0;i<100;i++)
  1133  0014E4  0E00               	movlw	0
  1134  0014E6  6E15               	movwf	IntroDelay@i,c
  1135  0014E8                     l1292:
  1136  0014E8  0E63               	movlw	99
  1137  0014EA  6415               	cpfsgt	IntroDelay@i,c
  1138  0014EC  D001               	goto	l263
  1139  0014EE  D023               	goto	u400
  1140  0014F0                     l263:
  1141                           
  1142                           ;StateIntro.c: 43: {
  1143                           ;StateIntro.c: 44: PORTD = aux;
  1144  0014F0  C017  FF83         	movff	IntroDelay@aux,3971	;volatile
  1145                           
  1146                           ;StateIntro.c: 45: if(n == 0)
  1147  0014F4  5016               	movf	IntroDelay@n,w,c
  1148  0014F6  A4D8               	btfss	status,2,c
  1149  0014F8  D005               	goto	l266
  1150                           
  1151                           ;StateIntro.c: 46: {
  1152                           ;StateIntro.c: 47: aux = 0b10000000 | (aux>>1);
  1153  0014FA  80D8               	bsf	status,0,c
  1154  0014FC  3217               	rrcf	IntroDelay@aux,f,c
  1155                           
  1156                           ;StateIntro.c: 48: if(aux = 255) n = 1;
  1157  0014FE  6817               	setf	IntroDelay@aux,c
  1158  001500  0E01               	movlw	1
  1159  001502  6E16               	movwf	IntroDelay@n,c
  1160  001504                     l266:
  1161                           
  1162                           ;StateIntro.c: 49: }
  1163                           ;StateIntro.c: 50: if(n == 1)
  1164  001504  0416               	decf	IntroDelay@n,w,c
  1165  001506  A4D8               	btfss	status,2,c
  1166  001508  D008               	goto	l268
  1167                           
  1168                           ;StateIntro.c: 51: {
  1169                           ;StateIntro.c: 52: aux = aux>>1;
  1170  00150A  90D8               	bcf	status,0,c
  1171  00150C  3017               	rrcf	IntroDelay@aux,w,c
  1172  00150E  6E17               	movwf	IntroDelay@aux,c
  1173                           
  1174                           ;StateIntro.c: 53: if(aux == 0) n = 0;
  1175  001510  5017               	movf	IntroDelay@aux,w,c
  1176  001512  A4D8               	btfss	status,2,c
  1177  001514  D002               	goto	l268
  1178  001516  0E00               	movlw	0
  1179  001518  6E16               	movwf	IntroDelay@n,c
  1180  00151A                     l268:
  1181                           
  1182                           ;StateIntro.c: 54: }
  1183                           ;StateIntro.c: 55: _delay((unsigned long)((40)*(40000000/4000.0)));
  1184  00151A  0E03               	movlw	3
  1185  00151C  6E14               	movwf	(??_IntroDelay+1)& (0+255),c
  1186  00151E  0E08               	movlw	8
  1187  001520  6E13               	movwf	??_IntroDelay& (0+255),c
  1188  001522  0E77               	movlw	119
  1189  001524                     u837:
  1190  001524  2EE8               	decfsz	wreg,f,c
  1191  001526  D7FE               	bra	u837
  1192  001528  2E13               	decfsz	??_IntroDelay& (0+255),f,c
  1193  00152A  D7FC               	bra	u837
  1194  00152C  2E14               	decfsz	(??_IntroDelay+1)& (0+255),f,c
  1195  00152E  D7FA               	bra	u837
  1196  001530  F000               	nop	
  1197  001532  2A15               	incf	IntroDelay@i,f,c
  1198  001534  D7D9               	goto	l1292
  1199  001536                     u400:
  1200                           
  1201                           ;StateIntro.c: 56: }
  1202                           ;StateIntro.c: 57: PORTD = 0;
  1203  001536  0E00               	movlw	0
  1204  001538  6E83               	movwf	3971,c	;volatile
  1205  00153A  0012               	return		;funcret
  1206  00153C                     __end_of_IntroDelay:
  1207                           	opt stack 0
  1208                           intcon	equ	0xFF2
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _Clock *****************
  1214 ;; Defined at:
  1215 ;;		line 14 in file "StateClock.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    9
  1236 ;; This function calls:
  1237 ;;		_LCDPutInst
  1238 ;;		_LCDPutStr
  1239 ;;		_SWdelay
  1240 ;;		_count_Clock
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text11
  1247  00158C                     __ptext11:
  1248                           	opt stack 0
  1249  00158C                     _Clock:
  1250                           	opt stack 21
  1251                           
  1252                           ;StateClock.c: 17: LCDPutInst(0x80);
  1253                           
  1254                           ;incstack = 0
  1255  00158C  0E80               	movlw	128
  1256  00158E  EC0B  F00A         	call	_LCDPutInst
  1257                           
  1258                           ;StateClock.c: 18: LCDPutStr("     Clock      ");
  1259  001592  0E12               	movlw	low STR_1
  1260  001594  6E1A               	movwf	LCDPutStr@ptr,c
  1261  001596  0E10               	movlw	high STR_1
  1262  001598  6E1B               	movwf	LCDPutStr@ptr+1,c
  1263  00159A  ECED  F00A         	call	_LCDPutStr	;wreg free
  1264                           
  1265                           ;StateClock.c: 19: LCDPutInst(0xC0);
  1266  00159E  0EC0               	movlw	192
  1267  0015A0  EC0B  F00A         	call	_LCDPutInst
  1268                           
  1269                           ;StateClock.c: 20: LCDPutStr("RB0=Now RA5=Next");
  1270  0015A4  0E45               	movlw	low STR_2
  1271  0015A6  6E1A               	movwf	LCDPutStr@ptr,c
  1272  0015A8  0E10               	movlw	high STR_2
  1273  0015AA  6E1B               	movwf	LCDPutStr@ptr+1,c
  1274  0015AC  ECED  F00A         	call	_LCDPutStr	;wreg free
  1275                           
  1276                           ;StateClock.c: 26: while (State == 1)
  1277  0015B0  D010               	goto	l206
  1278  0015B2                     l204:
  1279                           
  1280                           ;StateClock.c: 27: {
  1281                           ;StateClock.c: 28: if (PORTBbits.RB0 == 0)
  1282  0015B2  B081               	btfsc	3969,0,c	;volatile
  1283  0015B4  D006               	goto	l205
  1284                           
  1285                           ;StateClock.c: 29: {
  1286                           ;StateClock.c: 30: SWdelay();
  1287  0015B6  EC1E  F00B         	call	_SWdelay	;wreg free
  1288                           
  1289                           ;StateClock.c: 31: PORTD = 0xF0;
  1290  0015BA  0EF0               	movlw	240
  1291  0015BC  6E83               	movwf	3971,c	;volatile
  1292                           
  1293                           ;StateClock.c: 32: count_Clock ();
  1294  0015BE  EC65  F009         	call	_count_Clock	;wreg free
  1295  0015C2                     l205:
  1296                           
  1297                           ;StateClock.c: 33: }
  1298                           ;StateClock.c: 34: if (PORTAbits.RA5 == 0)
  1299  0015C2  BA80               	btfsc	3968,5,c	;volatile
  1300  0015C4  D006               	goto	l206
  1301                           
  1302                           ;StateClock.c: 35: {
  1303                           ;StateClock.c: 36: SWdelay();
  1304  0015C6  EC1E  F00B         	call	_SWdelay	;wreg free
  1305                           
  1306                           ;StateClock.c: 37: PORTD = 0x0F;
  1307  0015CA  0E0F               	movlw	15
  1308  0015CC  6E83               	movwf	3971,c	;volatile
  1309                           
  1310                           ;StateClock.c: 38: State = 0;
  1311  0015CE  0E00               	movlw	0
  1312  0015D0  6E1C               	movwf	_State,c
  1313  0015D2                     l206:
  1314  0015D2  041C               	decf	_State,w,c
  1315  0015D4  A4D8               	btfss	status,2,c
  1316  0015D6  0012               	return	
  1317  0015D8  D7EC               	goto	l204
  1318  0015DA                     __end_of_Clock:
  1319                           	opt stack 0
  1320                           intcon	equ	0xFF2
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _count_Clock *****************
  1326 ;; Defined at:
  1327 ;;		line 77 in file "StateClock.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    8
  1348 ;; This function calls:
  1349 ;;		_LCDPutInst
  1350 ;;		_LCDPutStr
  1351 ;;		_SWdelay
  1352 ;;		_disp_Clock
  1353 ;;		_set_Clock
  1354 ;; This function is called by:
  1355 ;;		_Clock
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text12
  1360  0012CA                     __ptext12:
  1361                           	opt stack 0
  1362  0012CA                     _count_Clock:
  1363                           	opt stack 21
  1364                           
  1365                           ;StateClock.c: 79: while (State == 1)
  1366                           
  1367                           ;incstack = 0
  1368  0012CA  D036               	goto	l221
  1369  0012CC                     
  1370                           ;StateClock.c: 80: {
  1371                           ;StateClock.c: 81: if(Timer1Flag == 1)
  1372  0012CC  0423               	decf	_Timer1Flag,w,c
  1373  0012CE  A4D8               	btfss	status,2,c
  1374  0012D0  D025               	goto	l216
  1375                           
  1376                           ;StateClock.c: 82: {
  1377                           ;StateClock.c: 83: sec++;
  1378  0012D2  2A20               	incf	_sec,f,c	;volatile
  1379                           
  1380                           ;StateClock.c: 84: if (sec > 59)
  1381  0012D4  0E3B               	movlw	59
  1382  0012D6  6420               	cpfsgt	_sec,c	;volatile
  1383  0012D8  D003               	goto	l217
  1384                           
  1385                           ;StateClock.c: 85: {
  1386                           ;StateClock.c: 86: sec = 0;
  1387  0012DA  0E00               	movlw	0
  1388  0012DC  6E20               	movwf	_sec,c	;volatile
  1389                           
  1390                           ;StateClock.c: 87: min++;
  1391  0012DE  2A21               	incf	_min,f,c	;volatile
  1392  0012E0                     l217:
  1393                           
  1394                           ;StateClock.c: 88: }
  1395                           ;StateClock.c: 89: if (min > 59)
  1396  0012E0  0E3B               	movlw	59
  1397  0012E2  6421               	cpfsgt	_min,c	;volatile
  1398  0012E4  D003               	goto	l218
  1399                           
  1400                           ;StateClock.c: 90: {
  1401                           ;StateClock.c: 91: min = 0;
  1402  0012E6  0E00               	movlw	0
  1403  0012E8  6E21               	movwf	_min,c	;volatile
  1404                           
  1405                           ;StateClock.c: 92: hr++;
  1406  0012EA  2A22               	incf	_hr,f,c	;volatile
  1407  0012EC                     l218:
  1408                           
  1409                           ;StateClock.c: 93: }
  1410                           ;StateClock.c: 94: if (hr > 12 && min == 0 && sec == 0)
  1411  0012EC  0E0C               	movlw	12
  1412  0012EE  6422               	cpfsgt	_hr,c	;volatile
  1413  0012F0  D008               	goto	l219
  1414  0012F2  5021               	movf	_min,w,c	;volatile
  1415  0012F4  A4D8               	btfss	status,2,c
  1416  0012F6  D005               	goto	l219
  1417  0012F8  5020               	movf	_sec,w,c	;volatile
  1418  0012FA  A4D8               	btfss	status,2,c
  1419  0012FC  D002               	goto	l219
  1420                           
  1421                           ;StateClock.c: 95: {
  1422                           ;StateClock.c: 96: hr = 1;
  1423  0012FE  0E01               	movlw	1
  1424  001300  6E22               	movwf	_hr,c	;volatile
  1425  001302                     l219:
  1426                           
  1427                           ;StateClock.c: 97: }
  1428                           ;StateClock.c: 98: disp_Clock();
  1429  001302  EC38  F008         	call	_disp_Clock	;wreg free
  1430                           
  1431                           ;StateClock.c: 99: Timer1Flag = 0;
  1432  001306  0E00               	movlw	0
  1433  001308  6E23               	movwf	_Timer1Flag,c
  1434                           
  1435                           ;StateClock.c: 101: LCDPutInst(0xC0);
  1436  00130A  0EC0               	movlw	192
  1437  00130C  EC0B  F00A         	call	_LCDPutInst
  1438                           
  1439                           ;StateClock.c: 102: LCDPutStr("RB0=Menu RA5=Set");
  1440  001310  0E34               	movlw	low STR_4
  1441  001312  6E1A               	movwf	LCDPutStr@ptr,c
  1442  001314  0E10               	movlw	high STR_4
  1443  001316  6E1B               	movwf	LCDPutStr@ptr+1,c
  1444  001318  ECED  F00A         	call	_LCDPutStr	;wreg free
  1445  00131C                     l216:
  1446                           
  1447                           ;StateClock.c: 104: }
  1448                           ;StateClock.c: 105: if(PORTAbits.RA5 == 0)
  1449  00131C  BA80               	btfsc	3968,5,c	;volatile
  1450  00131E  D006               	goto	l220
  1451                           
  1452                           ;StateClock.c: 106: {
  1453                           ;StateClock.c: 107: SWdelay();
  1454  001320  EC1E  F00B         	call	_SWdelay	;wreg free
  1455                           
  1456                           ;StateClock.c: 108: timeset = 1;
  1457  001324  0E01               	movlw	1
  1458  001326  6E1F               	movwf	_timeset,c	;volatile
  1459                           
  1460                           ;StateClock.c: 109: set_Clock();
  1461  001328  EC26  F009         	call	_set_Clock	;wreg free
  1462  00132C                     l220:
  1463                           
  1464                           ;StateClock.c: 110: }
  1465                           ;StateClock.c: 111: if(PORTBbits.RB0 == 0)
  1466  00132C  B081               	btfsc	3969,0,c	;volatile
  1467  00132E  D004               	goto	l221
  1468                           
  1469                           ;StateClock.c: 112: {
  1470                           ;StateClock.c: 113: SWdelay();
  1471  001330  EC1E  F00B         	call	_SWdelay	;wreg free
  1472                           
  1473                           ;StateClock.c: 117: State = 0;
  1474  001334  0E00               	movlw	0
  1475  001336  6E1C               	movwf	_State,c
  1476  001338                     l221:
  1477  001338  041C               	decf	_State,w,c
  1478  00133A  A4D8               	btfss	status,2,c
  1479  00133C  0012               	return	
  1480  00133E  D7C6               	goto	l215
  1481  001340                     __end_of_count_Clock:
  1482                           	opt stack 0
  1483                           intcon	equ	0xFF2
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function _set_Clock *****************
  1489 ;; Defined at:
  1490 ;;		line 129 in file "StateClock.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    7
  1511 ;; This function calls:
  1512 ;;		_LCDPutInst
  1513 ;;		_LCDPutStr
  1514 ;;		_SWdelay
  1515 ;;		_disp_Clock
  1516 ;; This function is called by:
  1517 ;;		_count_Clock
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text13
  1522  00124C                     __ptext13:
  1523                           	opt stack 0
  1524  00124C                     _set_Clock:
  1525                           	opt stack 21
  1526                           
  1527                           ;StateClock.c: 131: Time = hour;
  1528                           
  1529                           ;incstack = 0
  1530  00124C  0E00               	movlw	0
  1531  00124E  D01C               	goto	L1
  1532  001250                     
  1533                           ;StateClock.c: 133: {
  1534                           ;StateClock.c: 134: LCDPutInst(0xC0);
  1535  001250  0EC0               	movlw	192
  1536  001252  EC0B  F00A         	call	_LCDPutInst
  1537                           
  1538                           ;StateClock.c: 135: LCDPutStr("RB0= ++ RA5= -->");
  1539  001256  0E23               	movlw	low STR_5
  1540  001258  6E1A               	movwf	LCDPutStr@ptr,c
  1541  00125A  0E10               	movlw	high STR_5
  1542  00125C  6E1B               	movwf	LCDPutStr@ptr+1,c
  1543  00125E  ECED  F00A         	call	_LCDPutStr	;wreg free
  1544                           
  1545                           ;StateClock.c: 138: switch (Time)
  1546  001262  D028               	goto	l228
  1547  001264  EC38  F008         	call	_disp_Clock	;wreg free
  1548                           
  1549                           ;StateClock.c: 141: if(PORTBbits.RB0 == 0)
  1550  001268  B081               	btfsc	3969,0,c	;volatile
  1551  00126A  D009               	goto	l230
  1552                           
  1553                           ;StateClock.c: 142: {
  1554                           ;StateClock.c: 143: SWdelay();
  1555  00126C  EC1E  F00B         	call	_SWdelay	;wreg free
  1556                           
  1557                           ;StateClock.c: 144: hr++;
  1558  001270  2A22               	incf	_hr,f,c	;volatile
  1559                           
  1560                           ;StateClock.c: 145: if (hr > 12)
  1561  001272  0E0C               	movlw	12
  1562  001274  6422               	cpfsgt	_hr,c	;volatile
  1563  001276  D025               	goto	l234
  1564                           
  1565                           ;StateClock.c: 146: hr = 0;
  1566  001278  0E00               	movlw	0
  1567  00127A  6E22               	movwf	_hr,c	;volatile
  1568                           
  1569                           ;StateClock.c: 147: }
  1570  00127C  D022               	goto	l234
  1571  00127E                     l230:
  1572                           
  1573                           ;StateClock.c: 148: else if(PORTAbits.RA5 == 0)
  1574  00127E  BA80               	btfsc	3968,5,c	;volatile
  1575  001280  D020               	goto	l234
  1576                           
  1577                           ;StateClock.c: 149: {
  1578                           ;StateClock.c: 150: SWdelay();
  1579  001282  EC1E  F00B         	call	_SWdelay	;wreg free
  1580                           
  1581                           ;StateClock.c: 151: Time = minute;
  1582  001286  0E01               	movlw	1
  1583  001288                     L1:
  1584  001288  6E1E               	movwf	_Time,c
  1585                           
  1586                           ;StateClock.c: 152: }
  1587                           ;StateClock.c: 153: break;
  1588  00128A  D01B               	goto	l234
  1589  00128C  EC38  F008         	call	_disp_Clock	;wreg free
  1590                           
  1591                           ;StateClock.c: 155: if(PORTBbits.RB0 == 0)
  1592  001290  B081               	btfsc	3969,0,c	;volatile
  1593  001292  D009               	goto	l236
  1594                           
  1595                           ;StateClock.c: 156: {
  1596                           ;StateClock.c: 157: SWdelay();
  1597  001294  EC1E  F00B         	call	_SWdelay	;wreg free
  1598                           
  1599                           ;StateClock.c: 158: min++;
  1600  001298  2A21               	incf	_min,f,c	;volatile
  1601                           
  1602                           ;StateClock.c: 159: if (min > 59)
  1603  00129A  0E3B               	movlw	59
  1604  00129C  6421               	cpfsgt	_min,c	;volatile
  1605  00129E  D011               	goto	l234
  1606                           
  1607                           ;StateClock.c: 160: min = 0;
  1608  0012A0  0E00               	movlw	0
  1609  0012A2  6E21               	movwf	_min,c	;volatile
  1610                           
  1611                           ;StateClock.c: 161: }
  1612  0012A4  D00E               	goto	l234
  1613  0012A6                     l236:
  1614                           
  1615                           ;StateClock.c: 162: else if (PORTAbits.RA5 == 0)
  1616  0012A6  BA80               	btfsc	3968,5,c	;volatile
  1617  0012A8  D00C               	goto	l234
  1618                           
  1619                           ;StateClock.c: 163: {
  1620                           ;StateClock.c: 164: SWdelay();
  1621  0012AA  EC1E  F00B         	call	_SWdelay	;wreg free
  1622                           
  1623                           ;StateClock.c: 165: timeset = 0;
  1624  0012AE  0E00               	movlw	0
  1625  0012B0  6E1F               	movwf	_timeset,c	;volatile
  1626                           
  1627                           ;StateClock.c: 168: }
  1628                           
  1629                           ;StateClock.c: 166: }
  1630                           ;StateClock.c: 167: break;
  1631  0012B2  D007               	goto	l234
  1632  0012B4                     l228:
  1633  0012B4  501E               	movf	_Time,w,c
  1634                           
  1635                           ; Switch size 1, requested type "space"
  1636                           ; Number of cases is 2, Range of values is 0 to 1
  1637                           ; switch strategies available:
  1638                           ; Name         Instructions Cycles
  1639                           ; simple_byte            7     4 (average)
  1640                           ;	Chosen strategy is simple_byte
  1641  0012B6  0A00               	xorlw	0	; case 0
  1642  0012B8  B4D8               	btfsc	status,2,c
  1643  0012BA  D7D4               	goto	l229
  1644  0012BC  0A01               	xorlw	1	; case 1
  1645  0012BE  B4D8               	btfsc	status,2,c
  1646  0012C0  D7E5               	goto	l235
  1647  0012C2                     l234:
  1648  0012C2  041F               	decf	_timeset,w,c	;volatile
  1649  0012C4  A4D8               	btfss	status,2,c
  1650  0012C6  0012               	return	
  1651  0012C8  D7C3               	goto	l227
  1652  0012CA                     __end_of_set_Clock:
  1653                           	opt stack 0
  1654                           intcon	equ	0xFF2
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _disp_Clock *****************
  1660 ;; Defined at:
  1661 ;;		line 50 in file "StateClock.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    6
  1682 ;; This function calls:
  1683 ;;		_LCDPutChar
  1684 ;;		_LCDPutInst
  1685 ;;		_LCDPutStr
  1686 ;;		___awdiv
  1687 ;;		___awmod
  1688 ;; This function is called by:
  1689 ;;		_count_Clock
  1690 ;;		_set_Clock
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text14
  1695  001070                     __ptext14:
  1696                           	opt stack 0
  1697  001070                     _disp_Clock:
  1698                           	opt stack 21
  1699                           
  1700                           ;StateClock.c: 53: LCDPutInst(0x80);
  1701                           
  1702                           ;incstack = 0
  1703  001070  0E80               	movlw	128
  1704  001072  EC0B  F00A         	call	_LCDPutInst
  1705                           
  1706                           ;StateClock.c: 54: LCDPutChar(hr/10+'0');
  1707  001076  C022  F013         	movff	_hr,___awdiv@dividend	;volatile
  1708  00107A  6A14               	clrf	___awdiv@dividend+1,c
  1709  00107C  0E00               	movlw	0
  1710  00107E  6E16               	movwf	___awdiv@divisor+1,c
  1711  001080  0E0A               	movlw	10
  1712  001082  6E15               	movwf	___awdiv@divisor,c
  1713  001084  ECE4  F008         	call	___awdiv	;wreg free
  1714  001088  5013               	movf	?___awdiv,w,c
  1715  00108A  0F30               	addlw	48
  1716  00108C  ECD8  F009         	call	_LCDPutChar
  1717                           
  1718                           ;StateClock.c: 55: LCDPutChar(hr%10+'0');
  1719  001090  C022  F013         	movff	_hr,___awmod@dividend	;volatile
  1720  001094  6A14               	clrf	___awmod@dividend+1,c
  1721  001096  0E00               	movlw	0
  1722  001098  6E16               	movwf	___awmod@divisor+1,c
  1723  00109A  0E0A               	movlw	10
  1724  00109C  6E15               	movwf	___awmod@divisor,c
  1725  00109E  ECA0  F009         	call	___awmod	;wreg free
  1726  0010A2  5013               	movf	?___awmod,w,c
  1727  0010A4  0F30               	addlw	48
  1728  0010A6  ECD8  F009         	call	_LCDPutChar
  1729                           
  1730                           ;StateClock.c: 56: LCDPutChar(':');
  1731  0010AA  0E3A               	movlw	58
  1732  0010AC  ECD8  F009         	call	_LCDPutChar
  1733                           
  1734                           ;StateClock.c: 57: LCDPutChar(min/10+'0');
  1735  0010B0  C021  F013         	movff	_min,___awdiv@dividend	;volatile
  1736  0010B4  6A14               	clrf	___awdiv@dividend+1,c
  1737  0010B6  0E00               	movlw	0
  1738  0010B8  6E16               	movwf	___awdiv@divisor+1,c
  1739  0010BA  0E0A               	movlw	10
  1740  0010BC  6E15               	movwf	___awdiv@divisor,c
  1741  0010BE  ECE4  F008         	call	___awdiv	;wreg free
  1742  0010C2  5013               	movf	?___awdiv,w,c
  1743  0010C4  0F30               	addlw	48
  1744  0010C6  ECD8  F009         	call	_LCDPutChar
  1745                           
  1746                           ;StateClock.c: 58: LCDPutChar(min%10+'0');
  1747  0010CA  C021  F013         	movff	_min,___awmod@dividend	;volatile
  1748  0010CE  6A14               	clrf	___awmod@dividend+1,c
  1749  0010D0  0E00               	movlw	0
  1750  0010D2  6E16               	movwf	___awmod@divisor+1,c
  1751  0010D4  0E0A               	movlw	10
  1752  0010D6  6E15               	movwf	___awmod@divisor,c
  1753  0010D8  ECA0  F009         	call	___awmod	;wreg free
  1754  0010DC  5013               	movf	?___awmod,w,c
  1755  0010DE  0F30               	addlw	48
  1756  0010E0  ECD8  F009         	call	_LCDPutChar
  1757                           
  1758                           ;StateClock.c: 59: LCDPutChar(':');
  1759  0010E4  0E3A               	movlw	58
  1760  0010E6  ECD8  F009         	call	_LCDPutChar
  1761                           
  1762                           ;StateClock.c: 60: LCDPutChar(sec/10+'0');
  1763  0010EA  C020  F013         	movff	_sec,___awdiv@dividend	;volatile
  1764  0010EE  6A14               	clrf	___awdiv@dividend+1,c
  1765  0010F0  0E00               	movlw	0
  1766  0010F2  6E16               	movwf	___awdiv@divisor+1,c
  1767  0010F4  0E0A               	movlw	10
  1768  0010F6  6E15               	movwf	___awdiv@divisor,c
  1769  0010F8  ECE4  F008         	call	___awdiv	;wreg free
  1770  0010FC  5013               	movf	?___awdiv,w,c
  1771  0010FE  0F30               	addlw	48
  1772  001100  ECD8  F009         	call	_LCDPutChar
  1773                           
  1774                           ;StateClock.c: 61: LCDPutChar(sec%10+'0');
  1775  001104  C020  F013         	movff	_sec,___awmod@dividend	;volatile
  1776  001108  6A14               	clrf	___awmod@dividend+1,c
  1777  00110A  0E00               	movlw	0
  1778  00110C  6E16               	movwf	___awmod@divisor+1,c
  1779  00110E  0E0A               	movlw	10
  1780  001110  6E15               	movwf	___awmod@divisor,c
  1781  001112  ECA0  F009         	call	___awmod	;wreg free
  1782  001116  5013               	movf	?___awmod,w,c
  1783  001118  0F30               	addlw	48
  1784  00111A  ECD8  F009         	call	_LCDPutChar
  1785                           
  1786                           ;StateClock.c: 62: LCDPutStr("        ");
  1787  00111E  0E66               	movlw	low STR_3
  1788  001120  6E1A               	movwf	LCDPutStr@ptr,c
  1789  001122  0E10               	movlw	high STR_3
  1790  001124  6E1B               	movwf	LCDPutStr@ptr+1,c
  1791  001126  ECED  F00A         	call	_LCDPutStr	;wreg free
  1792  00112A  0012               	return		;funcret
  1793  00112C                     __end_of_disp_Clock:
  1794                           	opt stack 0
  1795                           intcon	equ	0xFF2
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function ___awmod *****************
  1801 ;; Defined at:
  1802 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  dividend        2   18[COMRAM] int 
  1805 ;;  divisor         2   20[COMRAM] int 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  sign            1   23[COMRAM] unsigned char 
  1808 ;;  counter         1   22[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2   18[COMRAM] int 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        6 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    2
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_disp_Clock
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text15
  1833  001340                     __ptext15:
  1834                           	opt stack 0
  1835  001340                     ___awmod:
  1836                           	opt stack 24
  1837                           
  1838                           ;incstack = 0
  1839  001340  0E00               	movlw	0
  1840  001342  6E18               	movwf	___awmod@sign,c
  1841  001344  AE14               	btfss	___awmod@dividend+1,7,c
  1842  001346  D006               	goto	l507
  1843  001348  6C13               	negf	___awmod@dividend,c
  1844  00134A  1E14               	comf	___awmod@dividend+1,f,c
  1845  00134C  B0D8               	btfsc	status,0,c
  1846  00134E  2A14               	incf	___awmod@dividend+1,f,c
  1847  001350  0E01               	movlw	1
  1848  001352  6E18               	movwf	___awmod@sign,c
  1849  001354                     l507:
  1850  001354  AE16               	btfss	___awmod@divisor+1,7,c
  1851  001356  D004               	goto	l508
  1852  001358  6C15               	negf	___awmod@divisor,c
  1853  00135A  1E16               	comf	___awmod@divisor+1,f,c
  1854  00135C  B0D8               	btfsc	status,0,c
  1855  00135E  2A16               	incf	___awmod@divisor+1,f,c
  1856  001360                     l508:
  1857  001360  5015               	movf	___awmod@divisor,w,c
  1858  001362  1016               	iorwf	___awmod@divisor+1,w,c
  1859  001364  B4D8               	btfsc	status,2,c
  1860  001366  D018               	goto	l515
  1861  001368  0E01               	movlw	1
  1862  00136A  6E17               	movwf	___awmod@counter,c
  1863  00136C  D004               	goto	l510
  1864  00136E  90D8               	bcf	status,0,c
  1865  001370  3615               	rlcf	___awmod@divisor,f,c
  1866  001372  3616               	rlcf	___awmod@divisor+1,f,c
  1867  001374  2A17               	incf	___awmod@counter,f,c
  1868  001376                     l510:
  1869  001376  AE16               	btfss	___awmod@divisor+1,7,c
  1870  001378  D7FA               	goto	l511
  1871  00137A                     u590:
  1872  00137A  5015               	movf	___awmod@divisor,w,c
  1873  00137C  5C13               	subwf	___awmod@dividend,w,c
  1874  00137E  5016               	movf	___awmod@divisor+1,w,c
  1875  001380  5814               	subwfb	___awmod@dividend+1,w,c
  1876  001382  A0D8               	btfss	status,0,c
  1877  001384  D004               	goto	l514
  1878  001386  5015               	movf	___awmod@divisor,w,c
  1879  001388  5E13               	subwf	___awmod@dividend,f,c
  1880  00138A  5016               	movf	___awmod@divisor+1,w,c
  1881  00138C  5A14               	subwfb	___awmod@dividend+1,f,c
  1882  00138E                     l514:
  1883  00138E  90D8               	bcf	status,0,c
  1884  001390  3216               	rrcf	___awmod@divisor+1,f,c
  1885  001392  3215               	rrcf	___awmod@divisor,f,c
  1886  001394  2E17               	decfsz	___awmod@counter,f,c
  1887  001396  D7F1               	goto	u590
  1888  001398                     l515:
  1889  001398  5018               	movf	___awmod@sign,w,c
  1890  00139A  B4D8               	btfsc	status,2,c
  1891  00139C  D004               	goto	l516
  1892  00139E  6C13               	negf	___awmod@dividend,c
  1893  0013A0  1E14               	comf	___awmod@dividend+1,f,c
  1894  0013A2  B0D8               	btfsc	status,0,c
  1895  0013A4  2A14               	incf	___awmod@dividend+1,f,c
  1896  0013A6                     l516:
  1897  0013A6  C013  F013         	movff	___awmod@dividend,?___awmod
  1898  0013AA  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1899  0013AE  0012               	return	
  1900  0013B0                     __end_of___awmod:
  1901                           	opt stack 0
  1902                           intcon	equ	0xFF2
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function ___awdiv *****************
  1908 ;; Defined at:
  1909 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  dividend        2   18[COMRAM] int 
  1912 ;;  divisor         2   20[COMRAM] int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  quotient        2   24[COMRAM] int 
  1915 ;;  sign            1   23[COMRAM] unsigned char 
  1916 ;;  counter         1   22[COMRAM] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2   18[COMRAM] int 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;Total ram usage:        8 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    2
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_disp_Clock
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text16
  1941  0011C8                     __ptext16:
  1942                           	opt stack 0
  1943  0011C8                     ___awdiv:
  1944                           	opt stack 24
  1945                           
  1946                           ;incstack = 0
  1947  0011C8  0E00               	movlw	0
  1948  0011CA  6E18               	movwf	___awdiv@sign,c
  1949  0011CC  AE16               	btfss	___awdiv@divisor+1,7,c
  1950  0011CE  D006               	goto	l494
  1951  0011D0  6C15               	negf	___awdiv@divisor,c
  1952  0011D2  1E16               	comf	___awdiv@divisor+1,f,c
  1953  0011D4  B0D8               	btfsc	status,0,c
  1954  0011D6  2A16               	incf	___awdiv@divisor+1,f,c
  1955  0011D8  0E01               	movlw	1
  1956  0011DA  6E18               	movwf	___awdiv@sign,c
  1957  0011DC                     l494:
  1958  0011DC  AE14               	btfss	___awdiv@dividend+1,7,c
  1959  0011DE  D006               	goto	l495
  1960  0011E0  6C13               	negf	___awdiv@dividend,c
  1961  0011E2  1E14               	comf	___awdiv@dividend+1,f,c
  1962  0011E4  B0D8               	btfsc	status,0,c
  1963  0011E6  2A14               	incf	___awdiv@dividend+1,f,c
  1964  0011E8  0E01               	movlw	1
  1965  0011EA  1A18               	xorwf	___awdiv@sign,f,c
  1966  0011EC                     l495:
  1967  0011EC  0E00               	movlw	0
  1968  0011EE  6E1A               	movwf	___awdiv@quotient+1,c
  1969  0011F0  0E00               	movlw	0
  1970  0011F2  6E19               	movwf	___awdiv@quotient,c
  1971  0011F4  5015               	movf	___awdiv@divisor,w,c
  1972  0011F6  1016               	iorwf	___awdiv@divisor+1,w,c
  1973  0011F8  B4D8               	btfsc	status,2,c
  1974  0011FA  D01C               	goto	l502
  1975  0011FC  0E01               	movlw	1
  1976  0011FE  6E17               	movwf	___awdiv@counter,c
  1977  001200  D004               	goto	l497
  1978  001202  90D8               	bcf	status,0,c
  1979  001204  3615               	rlcf	___awdiv@divisor,f,c
  1980  001206  3616               	rlcf	___awdiv@divisor+1,f,c
  1981  001208  2A17               	incf	___awdiv@counter,f,c
  1982  00120A                     l497:
  1983  00120A  AE16               	btfss	___awdiv@divisor+1,7,c
  1984  00120C  D7FA               	goto	l498
  1985  00120E                     u530:
  1986  00120E  90D8               	bcf	status,0,c
  1987  001210  3619               	rlcf	___awdiv@quotient,f,c
  1988  001212  361A               	rlcf	___awdiv@quotient+1,f,c
  1989  001214  5015               	movf	___awdiv@divisor,w,c
  1990  001216  5C13               	subwf	___awdiv@dividend,w,c
  1991  001218  5016               	movf	___awdiv@divisor+1,w,c
  1992  00121A  5814               	subwfb	___awdiv@dividend+1,w,c
  1993  00121C  A0D8               	btfss	status,0,c
  1994  00121E  D005               	goto	l501
  1995  001220  5015               	movf	___awdiv@divisor,w,c
  1996  001222  5E13               	subwf	___awdiv@dividend,f,c
  1997  001224  5016               	movf	___awdiv@divisor+1,w,c
  1998  001226  5A14               	subwfb	___awdiv@dividend+1,f,c
  1999  001228  8019               	bsf	___awdiv@quotient,0,c
  2000  00122A                     l501:
  2001  00122A  90D8               	bcf	status,0,c
  2002  00122C  3216               	rrcf	___awdiv@divisor+1,f,c
  2003  00122E  3215               	rrcf	___awdiv@divisor,f,c
  2004  001230  2E17               	decfsz	___awdiv@counter,f,c
  2005  001232  D7ED               	goto	u530
  2006  001234                     l502:
  2007  001234  5018               	movf	___awdiv@sign,w,c
  2008  001236  B4D8               	btfsc	status,2,c
  2009  001238  D004               	goto	l503
  2010  00123A  6C19               	negf	___awdiv@quotient,c
  2011  00123C  1E1A               	comf	___awdiv@quotient+1,f,c
  2012  00123E  B0D8               	btfsc	status,0,c
  2013  001240  2A1A               	incf	___awdiv@quotient+1,f,c
  2014  001242                     l503:
  2015  001242  C019  F013         	movff	___awdiv@quotient,?___awdiv
  2016  001246  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  2017  00124A  0012               	return	
  2018  00124C                     __end_of___awdiv:
  2019                           	opt stack 0
  2020                           intcon	equ	0xFF2
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           status	equ	0xFD8
  2024                           
  2025 ;; *************** function _LCDPutStr *****************
  2026 ;; Defined at:
  2027 ;;		line 198 in file "BBSPI_LCD.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  ptr             2   25[COMRAM] PTR const unsigned char 
  2030 ;;		 -> STR_7(17), STR_6(16), STR_5(17), STR_4(17), 
  2031 ;;		 -> STR_3(9), STR_2(17), STR_1(17), 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        2 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    5
  2050 ;; This function calls:
  2051 ;;		_LCDPutChar
  2052 ;; This function is called by:
  2053 ;;		_Clock
  2054 ;;		_disp_Clock
  2055 ;;		_count_Clock
  2056 ;;		_set_Clock
  2057 ;;		_Intro
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text17
  2062  0015DA                     __ptext17:
  2063                           	opt stack 0
  2064  0015DA                     _LCDPutStr:
  2065                           	opt stack 24
  2066                           
  2067                           ;BBSPI_LCD.c: 200: while(*ptr) LCDPutChar(*(ptr++));
  2068                           
  2069                           ;incstack = 0
  2070  0015DA  D00C               	goto	l131
  2071  0015DC  C01A  FFF6         	movff	LCDPutStr@ptr,tblptrl
  2072  0015E0  C01B  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  2073  0015E4                     	if	0	;tblptru may be non-zero
  2074  0015E4                     	endif
  2075  0015E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2076  0015E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2077  0015E6  6EF8               	movwf	tblptru,c
  2078  0015E8                     	endif
  2079  0015E8  0008               	tblrd		*
  2080  0015EA  50F5               	movf	tablat,w,c
  2081  0015EC  ECD8  F009         	call	_LCDPutChar
  2082  0015F0  4A1A               	infsnz	LCDPutStr@ptr,f,c
  2083  0015F2  2A1B               	incf	LCDPutStr@ptr+1,f,c
  2084  0015F4                     l131:
  2085  0015F4  C01A  FFF6         	movff	LCDPutStr@ptr,tblptrl
  2086  0015F8  C01B  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
  2087  0015FC                     	if	0	;tblptru may be non-zero
  2088  0015FC                     	endif
  2089  0015FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2090  0015FC  0E00               	movlw	low (__mediumconst shr (0+16))
  2091  0015FE  6EF8               	movwf	tblptru,c
  2092  001600                     	endif
  2093  001600  0008               	tblrd		*
  2094  001602  50F5               	movf	tablat,w,c
  2095  001604  0900               	iorlw	0
  2096  001606  B4D8               	btfsc	status,2,c
  2097  001608  0012               	return	
  2098  00160A  D7E8               	goto	l132
  2099  00160C                     __end_of_LCDPutStr:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           intcon	equ	0xFF2
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _LCDPutChar *****************
  2111 ;; Defined at:
  2112 ;;		line 160 in file "BBSPI_LCD.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  ch              1    wreg     unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  ch              1   24[COMRAM] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:        2 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		_WritePort_BBSPI
  2135 ;; This function is called by:
  2136 ;;		_LCDPutStr
  2137 ;;		_disp_Clock
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text18
  2142  0013B0                     __ptext18:
  2143                           	opt stack 0
  2144  0013B0                     _LCDPutChar:
  2145                           	opt stack 24
  2146                           
  2147                           ;incstack = 0
  2148                           ;LCDPutChar@ch stored from wreg
  2149  0013B0  6E19               	movwf	LCDPutChar@ch,c
  2150                           
  2151                           ;BBSPI_LCD.c: 162: _delay((unsigned long)((5)*(40000000/4000.0)));
  2152  0013B2  0E41               	movlw	65
  2153  0013B4  6E18               	movwf	??_LCDPutChar& (0+255),c
  2154  0013B6  0EEE               	movlw	238
  2155  0013B8                     u847:
  2156  0013B8  2EE8               	decfsz	wreg,f,c
  2157  0013BA  D7FE               	bra	u847
  2158  0013BC  2E18               	decfsz	??_LCDPutChar& (0+255),f,c
  2159  0013BE  D7FC               	bra	u847
  2160  0013C0  D000               	nop2	
  2161                           
  2162                           ;BBSPI_LCD.c: 163: WritePort_BBSPI (0x12, 0x80);
  2163  0013C2  0E80               	movlw	128
  2164  0013C4  6E16               	movwf	WritePort_BBSPI@a,c
  2165  0013C6  0E12               	movlw	18
  2166  0013C8  EC6D  F00B         	call	_WritePort_BBSPI
  2167                           
  2168                           ;BBSPI_LCD.c: 164: _delay((unsigned long)((1)*(40000000/4000.0)));
  2169  0013CC  0E0D               	movlw	13
  2170  0013CE  6E18               	movwf	??_LCDPutChar& (0+255),c
  2171  0013D0  0EFC               	movlw	252
  2172  0013D2                     u857:
  2173  0013D2  2EE8               	decfsz	wreg,f,c
  2174  0013D4  D7FE               	bra	u857
  2175  0013D6  2E18               	decfsz	??_LCDPutChar& (0+255),f,c
  2176  0013D8  D7FC               	bra	u857
  2177                           
  2178                           ;BBSPI_LCD.c: 165: WritePort_BBSPI (0x13, ch);
  2179  0013DA  C019  F016         	movff	LCDPutChar@ch,WritePort_BBSPI@a
  2180  0013DE  0E13               	movlw	19
  2181  0013E0  EC6D  F00B         	call	_WritePort_BBSPI
  2182                           
  2183                           ;BBSPI_LCD.c: 166: _delay((unsigned long)((1)*(40000000/4000.0)));
  2184  0013E4  0E0D               	movlw	13
  2185  0013E6  6E18               	movwf	??_LCDPutChar& (0+255),c
  2186  0013E8  0EFC               	movlw	252
  2187  0013EA                     u867:
  2188  0013EA  2EE8               	decfsz	wreg,f,c
  2189  0013EC  D7FE               	bra	u867
  2190  0013EE  2E18               	decfsz	??_LCDPutChar& (0+255),f,c
  2191  0013F0  D7FC               	bra	u867
  2192                           
  2193                           ;BBSPI_LCD.c: 167: WritePort_BBSPI (0x12, 0xC0);
  2194  0013F2  0EC0               	movlw	192
  2195  0013F4  6E16               	movwf	WritePort_BBSPI@a,c
  2196  0013F6  0E12               	movlw	18
  2197  0013F8  EC6D  F00B         	call	_WritePort_BBSPI
  2198                           
  2199                           ;BBSPI_LCD.c: 168: _delay((unsigned long)((1)*(40000000/4000.0)));
  2200  0013FC  0E0D               	movlw	13
  2201  0013FE  6E18               	movwf	??_LCDPutChar& (0+255),c
  2202  001400  0EFC               	movlw	252
  2203  001402                     u877:
  2204  001402  2EE8               	decfsz	wreg,f,c
  2205  001404  D7FE               	bra	u877
  2206  001406  2E18               	decfsz	??_LCDPutChar& (0+255),f,c
  2207  001408  D7FC               	bra	u877
  2208                           
  2209                           ;BBSPI_LCD.c: 169: WritePort_BBSPI (0x12, 0x00);
  2210  00140A  0E00               	movlw	0
  2211  00140C  6E16               	movwf	WritePort_BBSPI@a,c
  2212  00140E  0E12               	movlw	18
  2213  001410  EC6D  F00B         	call	_WritePort_BBSPI
  2214  001414  0012               	return		;funcret
  2215  001416                     __end_of_LCDPutChar:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           intcon	equ	0xFF2
  2222                           postinc0	equ	0xFEE
  2223                           wreg	equ	0xFE8
  2224                           status	equ	0xFD8
  2225                           
  2226 ;; *************** function _LCDPutInst *****************
  2227 ;; Defined at:
  2228 ;;		line 179 in file "BBSPI_LCD.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  ch              1    wreg     unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  ch              1   24[COMRAM] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    4
  2249 ;; This function calls:
  2250 ;;		_WritePort_BBSPI
  2251 ;; This function is called by:
  2252 ;;		_LCDInit
  2253 ;;		_Clock
  2254 ;;		_disp_Clock
  2255 ;;		_count_Clock
  2256 ;;		_set_Clock
  2257 ;;		_Intro
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text19
  2262  001416                     __ptext19:
  2263                           	opt stack 0
  2264  001416                     _LCDPutInst:
  2265                           	opt stack 25
  2266                           
  2267                           ;incstack = 0
  2268                           ;LCDPutInst@ch stored from wreg
  2269  001416  6E19               	movwf	LCDPutInst@ch,c
  2270                           
  2271                           ;BBSPI_LCD.c: 181: _delay((unsigned long)((5)*(40000000/4000.0)));
  2272  001418  0E41               	movlw	65
  2273  00141A  6E18               	movwf	??_LCDPutInst& (0+255),c
  2274  00141C  0EEE               	movlw	238
  2275  00141E                     u887:
  2276  00141E  2EE8               	decfsz	wreg,f,c
  2277  001420  D7FE               	bra	u887
  2278  001422  2E18               	decfsz	??_LCDPutInst& (0+255),f,c
  2279  001424  D7FC               	bra	u887
  2280  001426  D000               	nop2	
  2281                           
  2282                           ;BBSPI_LCD.c: 182: WritePort_BBSPI (0x12, 0x00);
  2283  001428  0E00               	movlw	0
  2284  00142A  6E16               	movwf	WritePort_BBSPI@a,c
  2285  00142C  0E12               	movlw	18
  2286  00142E  EC6D  F00B         	call	_WritePort_BBSPI
  2287                           
  2288                           ;BBSPI_LCD.c: 183: _delay((unsigned long)((1)*(40000000/4000.0)));
  2289  001432  0E0D               	movlw	13
  2290  001434  6E18               	movwf	??_LCDPutInst& (0+255),c
  2291  001436  0EFC               	movlw	252
  2292  001438                     u897:
  2293  001438  2EE8               	decfsz	wreg,f,c
  2294  00143A  D7FE               	bra	u897
  2295  00143C  2E18               	decfsz	??_LCDPutInst& (0+255),f,c
  2296  00143E  D7FC               	bra	u897
  2297                           
  2298                           ;BBSPI_LCD.c: 184: WritePort_BBSPI (0x13, ch);
  2299  001440  C019  F016         	movff	LCDPutInst@ch,WritePort_BBSPI@a
  2300  001444  0E13               	movlw	19
  2301  001446  EC6D  F00B         	call	_WritePort_BBSPI
  2302                           
  2303                           ;BBSPI_LCD.c: 185: _delay((unsigned long)((1)*(40000000/4000.0)));
  2304  00144A  0E0D               	movlw	13
  2305  00144C  6E18               	movwf	??_LCDPutInst& (0+255),c
  2306  00144E  0EFC               	movlw	252
  2307  001450                     u907:
  2308  001450  2EE8               	decfsz	wreg,f,c
  2309  001452  D7FE               	bra	u907
  2310  001454  2E18               	decfsz	??_LCDPutInst& (0+255),f,c
  2311  001456  D7FC               	bra	u907
  2312                           
  2313                           ;BBSPI_LCD.c: 186: WritePort_BBSPI (0x12,0x40);
  2314  001458  0E40               	movlw	64
  2315  00145A  6E16               	movwf	WritePort_BBSPI@a,c
  2316  00145C  0E12               	movlw	18
  2317  00145E  EC6D  F00B         	call	_WritePort_BBSPI
  2318                           
  2319                           ;BBSPI_LCD.c: 187: _delay((unsigned long)((1)*(40000000/4000.0)));
  2320  001462  0E0D               	movlw	13
  2321  001464  6E18               	movwf	??_LCDPutInst& (0+255),c
  2322  001466  0EFC               	movlw	252
  2323  001468                     u917:
  2324  001468  2EE8               	decfsz	wreg,f,c
  2325  00146A  D7FE               	bra	u917
  2326  00146C  2E18               	decfsz	??_LCDPutInst& (0+255),f,c
  2327  00146E  D7FC               	bra	u917
  2328                           
  2329                           ;BBSPI_LCD.c: 188: WritePort_BBSPI (0x12, 0x00);
  2330  001470  0E00               	movlw	0
  2331  001472  6E16               	movwf	WritePort_BBSPI@a,c
  2332  001474  0E12               	movlw	18
  2333  001476  EC6D  F00B         	call	_WritePort_BBSPI
  2334  00147A  0012               	return		;funcret
  2335  00147C                     __end_of_LCDPutInst:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           intcon	equ	0xFF2
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _WritePort_BBSPI *****************
  2347 ;; Defined at:
  2348 ;;		line 144 in file "BBSPI_LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  port_add        1    wreg     unsigned char 
  2351 ;;  a               1   21[COMRAM] unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  port_add        1   22[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;Total ram usage:        2 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    3
  2370 ;; This function calls:
  2371 ;;		_SendByteBBSPI
  2372 ;; This function is called by:
  2373 ;;		_LCDInit
  2374 ;;		_LCDPutChar
  2375 ;;		_LCDPutInst
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text20
  2380  0016DA                     __ptext20:
  2381                           	opt stack 0
  2382  0016DA                     _WritePort_BBSPI:
  2383                           	opt stack 24
  2384                           
  2385                           ;incstack = 0
  2386                           ;WritePort_BBSPI@port_add stored from wreg
  2387  0016DA  6E17               	movwf	WritePort_BBSPI@port_add,c
  2388                           
  2389                           ;BBSPI_LCD.c: 146: LATAbits.LATA2 = 0;
  2390  0016DC  9489               	bcf	3977,2,c	;volatile
  2391                           
  2392                           ;BBSPI_LCD.c: 147: SendByteBBSPI(0x40);
  2393  0016DE  0E40               	movlw	64
  2394  0016E0  EC9E  F00A         	call	_SendByteBBSPI
  2395                           
  2396                           ;BBSPI_LCD.c: 148: SendByteBBSPI(port_add);
  2397  0016E4  5017               	movf	WritePort_BBSPI@port_add,w,c
  2398  0016E6  EC9E  F00A         	call	_SendByteBBSPI
  2399                           
  2400                           ;BBSPI_LCD.c: 149: SendByteBBSPI(a);
  2401  0016EA  5016               	movf	WritePort_BBSPI@a,w,c
  2402  0016EC  EC9E  F00A         	call	_SendByteBBSPI
  2403                           
  2404                           ;BBSPI_LCD.c: 150: LATAbits.LATA2 = 1;
  2405  0016F0  8489               	bsf	3977,2,c	;volatile
  2406  0016F2  0012               	return		;funcret
  2407  0016F4                     __end_of_WritePort_BBSPI:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           intcon	equ	0xFF2
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _SendByteBBSPI *****************
  2419 ;; Defined at:
  2420 ;;		line 91 in file "BBSPI_LCD.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  output          1    wreg     unsigned char 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  output          1   18[COMRAM] unsigned char 
  2425 ;;  input           1   20[COMRAM] unsigned char 
  2426 ;;  bitcount        1   19[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;Total ram usage:        3 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_Port_BBSPIInit
  2447 ;;		_WritePort_BBSPI
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text21
  2452  00153C                     __ptext21:
  2453                           	opt stack 0
  2454  00153C                     _SendByteBBSPI:
  2455                           	opt stack 24
  2456                           
  2457                           ;incstack = 0
  2458                           ;SendByteBBSPI@output stored from wreg
  2459  00153C  6E13               	movwf	SendByteBBSPI@output,c
  2460                           
  2461                           ;BBSPI_LCD.c: 93: unsigned char bitcount;
  2462                           ;BBSPI_LCD.c: 94: unsigned char input = output;
  2463  00153E  C013  F015         	movff	SendByteBBSPI@output,SendByteBBSPI@input
  2464                           
  2465                           ;BBSPI_LCD.c: 96: for(bitcount=0;bitcount<8;bitcount++)
  2466  001542  0E00               	movlw	0
  2467  001544  6E14               	movwf	SendByteBBSPI@bitcount,c
  2468  001546                     l952:
  2469  001546  0E07               	movlw	7
  2470  001548  6414               	cpfsgt	SendByteBBSPI@bitcount,c
  2471  00154A  D001               	goto	l110
  2472  00154C  0012               	return	
  2473  00154E                     l110:
  2474                           
  2475                           ;BBSPI_LCD.c: 97: {
  2476                           ;BBSPI_LCD.c: 99: if(output & 0x80)
  2477  00154E  AE13               	btfss	SendByteBBSPI@output,7,c
  2478  001550  D002               	goto	l112
  2479                           
  2480                           ;BBSPI_LCD.c: 100: LATCbits.LATC5 = 1;
  2481  001552  8A8B               	bsf	3979,5,c	;volatile
  2482  001554  D001               	goto	l113
  2483  001556                     l112:
  2484                           
  2485                           ;BBSPI_LCD.c: 101: else
  2486                           ;BBSPI_LCD.c: 102: LATCbits.LATC5 = 0;
  2487  001556  9A8B               	bcf	3979,5,c	;volatile
  2488  001558                     l113:
  2489                           
  2490                           ;BBSPI_LCD.c: 104: if (LATCbits.LATC4)
  2491  001558  A88B               	btfss	3979,4,c	;volatile
  2492  00155A  D003               	goto	l114
  2493                           
  2494                           ;BBSPI_LCD.c: 105: input = (input << 1) | 0x1;
  2495  00155C  80D8               	bsf	status,0,c
  2496  00155E  3615               	rlcf	SendByteBBSPI@input,f,c
  2497  001560  D003               	goto	l115
  2498  001562                     l114:
  2499                           
  2500                           ;BBSPI_LCD.c: 106: else
  2501                           ;BBSPI_LCD.c: 107: input = input << 1;
  2502  001562  5015               	movf	SendByteBBSPI@input,w,c
  2503  001564  2415               	addwf	SendByteBBSPI@input,w,c
  2504  001566  6E15               	movwf	SendByteBBSPI@input,c
  2505  001568                     l115:
  2506                           
  2507                           ;BBSPI_LCD.c: 108: LATCbits.LATC3 = 1;
  2508  001568  868B               	bsf	3979,3,c	;volatile
  2509                           
  2510                           ;BBSPI_LCD.c: 109: __nop();__nop();__nop();__nop();__nop();__nop();
  2511  00156A  F000               	nop	
  2512  00156C  F000               	nop	
  2513  00156E  F000               	nop	
  2514  001570  F000               	nop	
  2515  001572  F000               	nop	
  2516  001574  F000               	nop	
  2517                           
  2518                           ;BBSPI_LCD.c: 110: __nop();__nop();__nop();__nop();__nop();__nop();
  2519  001576  F000               	nop	
  2520  001578  F000               	nop	
  2521  00157A  F000               	nop	
  2522  00157C  F000               	nop	
  2523  00157E  F000               	nop	
  2524  001580  F000               	nop	
  2525                           
  2526                           ;BBSPI_LCD.c: 111: LATCbits.LATC3 = 0;
  2527  001582  968B               	bcf	3979,3,c	;volatile
  2528                           
  2529                           ;BBSPI_LCD.c: 112: output <<= 1;
  2530  001584  90D8               	bcf	status,0,c
  2531  001586  3613               	rlcf	SendByteBBSPI@output,f,c
  2532  001588  2A14               	incf	SendByteBBSPI@bitcount,f,c
  2533  00158A  D7DD               	goto	l952
  2534  00158C                     __end_of_SendByteBBSPI:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           intcon	equ	0xFF2
  2541                           postinc0	equ	0xFEE
  2542                           wreg	equ	0xFE8
  2543                           status	equ	0xFD8
  2544                           
  2545 ;; *************** function _SWdelay *****************
  2546 ;; Defined at:
  2547 ;;		line 32 in file "SystemInitialize.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    2
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_Clock
  2572 ;;		_count_Clock
  2573 ;;		_set_Clock
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text22
  2578  00163C                     __ptext22:
  2579                           	opt stack 0
  2580  00163C                     _SWdelay:
  2581                           	opt stack 25
  2582                           
  2583                           ;SystemInitialize.c: 34: while(PORTAbits.RA5 == 0)
  2584                           
  2585                           ;incstack = 0
  2586  00163C  D007               	goto	l71
  2587  00163E                     
  2588                           ;SystemInitialize.c: 35: _delay((unsigned long)((1)*(40000000/4000.0)));
  2589  00163E  0E0D               	movlw	13
  2590  001640  6E13               	movwf	??_SWdelay& (0+255),c
  2591  001642  0EFC               	movlw	252
  2592  001644                     u927:
  2593  001644  2EE8               	decfsz	wreg,f,c
  2594  001646  D7FE               	bra	u927
  2595  001648  2E13               	decfsz	??_SWdelay& (0+255),f,c
  2596  00164A  D7FC               	bra	u927
  2597  00164C                     l71:
  2598  00164C  BA80               	btfsc	3968,5,c	;volatile
  2599  00164E  D008               	goto	l74
  2600  001650  D7F6               	goto	l72
  2601  001652                     
  2602                           ;SystemInitialize.c: 37: _delay((unsigned long)((1)*(40000000/4000.0)));
  2603  001652  0E0D               	movlw	13
  2604  001654  6E13               	movwf	??_SWdelay& (0+255),c
  2605  001656  0EFC               	movlw	252
  2606  001658                     u937:
  2607  001658  2EE8               	decfsz	wreg,f,c
  2608  00165A  D7FE               	bra	u937
  2609  00165C  2E13               	decfsz	??_SWdelay& (0+255),f,c
  2610  00165E  D7FC               	bra	u937
  2611  001660                     l74:
  2612  001660  B081               	btfsc	3969,0,c	;volatile
  2613  001662  0012               	return	
  2614  001664  D7F6               	goto	l75
  2615  001666                     __end_of_SWdelay:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           intcon	equ	0xFF2
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           status	equ	0xFD8
  2625                           
  2626 ;; *************** function _InterruptManager *****************
  2627 ;; Defined at:
  2628 ;;		line 28 in file "InterruptManager.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:       18 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    1
  2649 ;; This function calls:
  2650 ;;		_TMR1InterruptRoutine
  2651 ;; This function is called by:
  2652 ;;		Interrupt level 2
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	intcode
  2657  000008                     __pintcode:
  2658                           	opt stack 0
  2659  000008                     _InterruptManager:
  2660                           	opt stack 21
  2661                           
  2662                           ;incstack = 0
  2663  000008  8224               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2664  00000A  ED96  F008         	call	int_func,f	;refresh shadow registers
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           intcon	equ	0xFF2
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           status	equ	0xFD8
  2673                           
  2674                           	psect	intcode_body
  2675  00112C                     __pintcode_body:
  2676                           	opt stack 21
  2677  00112C                     int_func:
  2678                           	opt stack 21
  2679  00112C  0006               	pop		; remove dummy address from shadow register refresh
  2680  00112E  CFFA F001          	movff	pclath,??_InterruptManager
  2681  001132  CFFB F002          	movff	pclatu,??_InterruptManager+1
  2682  001136  CFE9 F003          	movff	fsr0l,??_InterruptManager+2
  2683  00113A  CFEA F004          	movff	fsr0h,??_InterruptManager+3
  2684  00113E  CFE1 F005          	movff	fsr1l,??_InterruptManager+4
  2685  001142  CFE2 F006          	movff	fsr1h,??_InterruptManager+5
  2686  001146  CFD9 F007          	movff	fsr2l,??_InterruptManager+6
  2687  00114A  CFDA F008          	movff	fsr2h,??_InterruptManager+7
  2688  00114E  CFF3 F009          	movff	prodl,??_InterruptManager+8
  2689  001152  CFF4 F00A          	movff	prodh,??_InterruptManager+9
  2690  001156  CFF6 F00B          	movff	tblptrl,??_InterruptManager+10
  2691  00115A  CFF7 F00C          	movff	tblptrh,??_InterruptManager+11
  2692  00115E  CFF8 F00D          	movff	tblptru,??_InterruptManager+12
  2693  001162  CFF5 F00E          	movff	tablat,??_InterruptManager+13
  2694  001166  C024  F00F         	movff	btemp,??_InterruptManager+14
  2695  00116A  C025  F010         	movff	btemp+1,??_InterruptManager+15
  2696  00116E  C026  F011         	movff	btemp+2,??_InterruptManager+16
  2697  001172  C027  F012         	movff	btemp+3,??_InterruptManager+17
  2698                           
  2699                           ;InterruptManager.c: 30: if(PIR1bits.TMR1IF == 1)
  2700  001176  B09E               	btfsc	3998,0,c	;volatile
  2701                           
  2702                           ;InterruptManager.c: 31: {
  2703                           ;InterruptManager.c: 33: TMR1InterruptRoutine();
  2704  001178  EC8E  F00B         	call	_TMR1InterruptRoutine	;wreg free
  2705  00117C  C012  F027         	movff	??_InterruptManager+17,btemp+3
  2706  001180  C011  F026         	movff	??_InterruptManager+16,btemp+2
  2707  001184  C010  F025         	movff	??_InterruptManager+15,btemp+1
  2708  001188  C00F  F024         	movff	??_InterruptManager+14,btemp
  2709  00118C  C00E  FFF5         	movff	??_InterruptManager+13,tablat
  2710  001190  C00D  FFF8         	movff	??_InterruptManager+12,tblptru
  2711  001194  C00C  FFF7         	movff	??_InterruptManager+11,tblptrh
  2712  001198  C00B  FFF6         	movff	??_InterruptManager+10,tblptrl
  2713  00119C  C00A  FFF4         	movff	??_InterruptManager+9,prodh
  2714  0011A0  C009  FFF3         	movff	??_InterruptManager+8,prodl
  2715  0011A4  C008  FFDA         	movff	??_InterruptManager+7,fsr2h
  2716  0011A8  C007  FFD9         	movff	??_InterruptManager+6,fsr2l
  2717  0011AC  C006  FFE2         	movff	??_InterruptManager+5,fsr1h
  2718  0011B0  C005  FFE1         	movff	??_InterruptManager+4,fsr1l
  2719  0011B4  C004  FFEA         	movff	??_InterruptManager+3,fsr0h
  2720  0011B8  C003  FFE9         	movff	??_InterruptManager+2,fsr0l
  2721  0011BC  C002  FFFB         	movff	??_InterruptManager+1,pclatu
  2722  0011C0  C001  FFFA         	movff	??_InterruptManager,pclath
  2723  0011C4  9224               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2724  0011C6  0011               	retfie		f
  2725  0011C8                     __end_of_InterruptManager:
  2726                           	opt stack 0
  2727                           pclatu	equ	0xFFB
  2728                           pclath	equ	0xFFA
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           fsr0h	equ	0xFEA
  2738                           fsr0l	equ	0xFE9
  2739                           wreg	equ	0xFE8
  2740                           fsr1h	equ	0xFE2
  2741                           fsr1l	equ	0xFE1
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _TMR1InterruptRoutine *****************
  2747 ;; Defined at:
  2748 ;;		line 129 in file "tmr1.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_InterruptManager
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text24
  2776  00171C                     __ptext24:
  2777                           	opt stack 0
  2778  00171C                     _TMR1InterruptRoutine:
  2779                           	opt stack 21
  2780                           
  2781                           ;tmr1.c: 132: PIR1bits.TMR1IF = 0;
  2782                           
  2783                           ;incstack = 0
  2784  00171C  909E               	bcf	3998,0,c	;volatile
  2785                           
  2786                           ;tmr1.c: 135: TMR1H = 0x80;
  2787  00171E  0E80               	movlw	128
  2788  001720  6ECF               	movwf	4047,c	;volatile
  2789                           
  2790                           ;tmr1.c: 136: TMR1L = 0x00;
  2791  001722  0E00               	movlw	0
  2792  001724  6ECE               	movwf	4046,c	;volatile
  2793                           
  2794                           ;tmr1.c: 139: Timer1Flag = 1;
  2795  001726  0E01               	movlw	1
  2796  001728  6E23               	movwf	_Timer1Flag,c
  2797  00172A  0012               	return	
  2798  00172C                     __end_of_TMR1InterruptRoutine:
  2799                           	opt stack 0
  2800                           pclatu	equ	0xFFB
  2801                           pclath	equ	0xFFA
  2802                           tblptru	equ	0xFF8
  2803                           tblptrh	equ	0xFF7
  2804                           tblptrl	equ	0xFF6
  2805                           tablat	equ	0xFF5
  2806                           prodh	equ	0xFF4
  2807                           prodl	equ	0xFF3
  2808                           intcon	equ	0xFF2
  2809                           postinc0	equ	0xFEE
  2810                           fsr0h	equ	0xFEA
  2811                           fsr0l	equ	0xFE9
  2812                           wreg	equ	0xFE8
  2813                           fsr1h	equ	0xFE2
  2814                           fsr1l	equ	0xFE1
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           status	equ	0xFD8
  2818                           pclatu	equ	0xFFB
  2819                           pclath	equ	0xFFA
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           prodh	equ	0xFF4
  2825                           prodl	equ	0xFF3
  2826                           intcon	equ	0xFF2
  2827                           postinc0	equ	0xFEE
  2828                           fsr0h	equ	0xFEA
  2829                           fsr0l	equ	0xFE9
  2830                           wreg	equ	0xFE8
  2831                           fsr1h	equ	0xFE2
  2832                           fsr1l	equ	0xFE1
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837                           	psect	rparam
  2838  0000                     pclatu	equ	0xFFB
  2839                           pclath	equ	0xFFA
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           postinc0	equ	0xFEE
  2848                           fsr0h	equ	0xFEA
  2849                           fsr0l	equ	0xFE9
  2850                           wreg	equ	0xFE8
  2851                           fsr1h	equ	0xFE2
  2852                           fsr1l	equ	0xFE1
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857                           	psect	temp
  2858  000024                     btemp:
  2859                           	opt stack 0
  2860  000024                     	ds	1
  2861  0000                     int$flags	set	btemp
  2862  0000                     wtemp6	set	btemp+1
  2863                           pclatu	equ	0xFFB
  2864                           pclath	equ	0xFFA
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           prodh	equ	0xFF4
  2870                           prodl	equ	0xFF3
  2871                           intcon	equ	0xFF2
  2872                           postinc0	equ	0xFEE
  2873                           fsr0h	equ	0xFEA
  2874                           fsr0l	equ	0xFE9
  2875                           wreg	equ	0xFE8
  2876                           fsr1h	equ	0xFE2
  2877                           fsr1l	equ	0xFE1
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8


Data Sizes:
    Strings     110
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _Intro->_LCDPutStr
    _LCDInit->_LCDPutInst
    _Port_BBSPIInit->_SendByteBBSPI
    _Clock->_LCDPutStr
    _count_Clock->_LCDPutStr
    _set_Clock->_LCDPutStr
    _disp_Clock->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_WritePort_BBSPI
    _LCDPutInst->_WritePort_BBSPI
    _WritePort_BBSPI->_SendByteBBSPI

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20121
                              _Clock
                              _Intro
                      _SysInitialize
 ---------------------------------------------------------------------------------
 (1) _SysInitialize                                        0     0      0       0
                _InterruptInitialize
                     _PortInitialize
                     _TMR1Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1Initialize                                       0     0      0       0
                          _TMR1Start
 ---------------------------------------------------------------------------------
 (3) _TMR1Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PortInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InterruptInitialize                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Intro                                                0     0      0    4140
                         _IntroDelay
                            _LCDInit
                         _LCDPutInst
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1763
                                             25 COMRAM     1     1      0
                          _InitBBSPI
                         _LCDPutInst
                     _Port_BBSPIInit
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (3) _Port_BBSPIInit                                       1     1      0     105
                                             21 COMRAM     1     1      0
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (3) _InitBBSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IntroDelay                                           5     5      0     120
                                             18 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Clock                                                0     0      0   15981
                         _LCDPutInst
                          _LCDPutStr
                            _SWdelay
                        _count_Clock
 ---------------------------------------------------------------------------------
 (2) _count_Clock                                          0     0      0   13724
                         _LCDPutInst
                          _LCDPutStr
                            _SWdelay
                         _disp_Clock
                          _set_Clock
 ---------------------------------------------------------------------------------
 (3) _set_Clock                                            0     0      0    6862
                         _LCDPutInst
                          _LCDPutStr
                            _SWdelay
                         _disp_Clock
 ---------------------------------------------------------------------------------
 (4) _disp_Clock                                           0     0      0    4605
                         _LCDPutChar
                         _LCDPutInst
                          _LCDPutStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     752
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     756
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            2     0      2    1417
                                             25 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     840
                                             23 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (2) _LCDPutInst                                           2     2      0     840
                                             23 COMRAM     2     2      0
                    _WritePort_BBSPI
 ---------------------------------------------------------------------------------
 (4) _WritePort_BBSPI                                      2     1      1     818
                                             21 COMRAM     2     1      1
                      _SendByteBBSPI
 ---------------------------------------------------------------------------------
 (5) _SendByteBBSPI                                        3     3      0      90
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _SWdelay                                              1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManager                                    18    18      0       0
                                              0 COMRAM    18    18      0
               _TMR1InterruptRoutine
 ---------------------------------------------------------------------------------
 (10) _TMR1InterruptRoutine                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
     _SWdelay
     _count_Clock
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _LCDPutStr
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
       _SWdelay
       _disp_Clock
         _LCDPutChar
           _WritePort_BBSPI
             _SendByteBBSPI
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
         ___awdiv
         ___awmod
       _set_Clock
         _LCDPutInst
           _WritePort_BBSPI
             _SendByteBBSPI
         _LCDPutStr
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
         _SWdelay
         _disp_Clock
           _LCDPutChar
             _WritePort_BBSPI
               _SendByteBBSPI
           _LCDPutInst
             _WritePort_BBSPI
               _SendByteBBSPI
           _LCDPutStr
             _LCDPutChar
               _WritePort_BBSPI
                 _SendByteBBSPI
           ___awdiv
           ___awmod
   _Intro
     _IntroDelay
     _LCDInit
       _InitBBSPI
       _LCDPutInst
         _WritePort_BBSPI
           _SendByteBBSPI
       _Port_BBSPIInit
         _SendByteBBSPI
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutInst
       _WritePort_BBSPI
         _SendByteBBSPI
     _LCDPutStr
       _LCDPutChar
         _WritePort_BBSPI
           _SendByteBBSPI
   _SysInitialize
     _InterruptInitialize
     _PortInitialize
     _TMR1Initialize
       _TMR1Start

 _InterruptManager (ROOT)
   _TMR1InterruptRoutine

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      23       1       37.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      32        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 01 22:36:18 2018

           ??_InterruptManager 0001                             l31 1672                    ?_LCDPutChar 0001  
                           l29 166C                             l71 164C                             l72 163E  
                           l74 1660                             l75 1652                   ___awdiv@sign 0018  
                  ?_LCDPutInst 0001                             _hr 0022                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000                   __CFG_CP5$OFF 000000  
        SendByteBBSPI@bitcount 0014                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l110 154E                            l112 1556                            l113 1558  
                          l114 1562                            l115 1568                            l131 15F4  
                          l132 15DC                            l220 132C                            l204 15B2  
                          l221 1338                            l205 15C2                            l230 127E  
                          l206 15D2                            l215 12CC                            l216 131C  
                          l217 12E0                            l234 12C2                            l218 12EC  
                          l235 128C                            l227 1250                            l219 1302  
                          l228 12B4                            l236 12A6                            l501 122A  
                          l229 1264                            l502 1234                            l510 1376  
                          l503 1242                            l511 136E                            l263 14F0  
                          l514 138E                            l266 1504                            l515 1398  
                          l507 1354                            l516 13A6                            l508 1360  
                          l268 151A                            l494 11DC                            l495 11EC  
                          l497 120A                            l498 1202                            l952 1546  
                 __CFG_CPB$OFF 000000                            u400 1536                            u530 120E  
                 __CFG_CPD$OFF 000000                            u590 137A                            u817 148A  
                          u907 1450                            u827 14B2                            u917 1468  
                          u837 1524                            u927 1644                            u847 13B8  
                          u937 1658                            u857 13D2                            u867 13EA  
                          u877 1402                            u887 141E                            u897 1438  
                          _min 0021                            _sec 0020                   ___awmod@sign 0018  
                          wreg 000FE8                   __CFG_MODE$MC 000000                __end_of_LCDInit 14DC  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l1292 14E8  
                         l1714 1676                           STR_1 1012                           STR_2 1045  
                         STR_3 1066                           STR_4 1034                           STR_5 1023  
                         STR_6 1056                           STR_7 1001                   ?_count_Clock 0001  
                         _LATA 000F89                           _LATB 000F8A          ??_InterruptInitialize 0013  
                 __CFG_PWRT$ON 000000                           _Time 001E                           _main 1666  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr2h 000FDA  
                         fsr0l 000FE9                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0024               ?_WritePort_BBSPI 0016                           prodh 000FF4  
                         prodl 000FF3                           start 000E             __size_of_LCDPutStr 0032  
                __CFG_IESO$OFF 000000                  _SysInitialize 172C                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000                __end_of_SWdelay 1666                  __CFG_WAIT$OFF 000000  
                        ?_main 0001                __end_of___awdiv 124C                __end_of___awmod 13B0  
              ___awdiv@divisor 0015                ___awdiv@counter 0017                          _RCREG 000FAE  
                        _RCSTA 000FAB                          _TMR1H 000FCF                          _TMR1L 000FCE  
                        _SPBRG 000FAF                          _PORTD 000F83                          _TRISD 000F95  
                        _TXREG 000FAD                          _TXSTA 000FAC                          _Clock 158C  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000                  __CFG_WRT5$OFF 000000  
                __CFG_WRT6$OFF 000000                  __CFG_WRT7$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                          _Intro 160C                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                 __CFG_EBTR4$OFF 000000  
               __CFG_EBTR5$OFF 000000                 __CFG_EBTR6$OFF 000000                 __CFG_EBTR7$OFF 000000  
                        _State 001C                  __CFG_WRTB$OFF 000000        __size_of_Port_BBSPIInit 001A  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
           __size_of_TMR1Start 0004                          pclath 000FFA                          tablat 000FF5  
          __size_of_LCDPutChar 0066            __size_of_LCDPutInst 0066                          status 000FD8  
                        wtemp6 0025                 ?_SysInitialize 0001                __initialization 16F4  
                 __end_of_main 1686                 __CFG_OSC$HSPLL 000000                         ??_main 001C  
                __activetblptr 000003                      ??_LCDInit 001A                   LCDPutChar@ch 0019  
            __end_of_LCDPutStr 160C                     _IntroDelay 14DC                         ?_Clock 0001  
                       ?_Intro 0001             __size_of_InitBBSPI 0012               ___awdiv@dividend 0013  
                 LCDPutInst@ch 0019                __CFG_BBSIZ$BB2K 000000                   LCDPutStr@ptr 001A  
                    ??_SWdelay 0013                     _Timer1Flag 0023                 __CFG_XINST$OFF 000000  
                    ??___awdiv 0017              __end_of_TMR1Start 1748                 __CFG_STVREN$ON 000000  
                    ??___awmod 0017                    IntroDelay@i 0015                    IntroDelay@n 0016  
                       clear_0 16FA               ___awdiv@quotient 0019                ___awmod@divisor 0015  
              ___awmod@counter 0017         Port_BBSPIInit@port_dir 0016                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
      __size_of_PortInitialize 001E                     __accesstop 0060        __end_of__initialization 1700  
         __size_of_count_Clock 0076                ??_SysInitialize 0013                  ___rparam_used 000001  
       __size_of_SendByteBBSPI 0050        __size_of_TMR1Initialize 001C                  __end_of_Clock 15DA  
               __pcstackCOMRAM 0001                  __end_of_Intro 163C              __end_of_InitBBSPI 171C  
                 ??_LCDPutChar 0018                   ??_LCDPutInst 0018  __size_of_TMR1InterruptRoutine 0010  
    __size_of_InterruptManager 11C0                    ?_IntroDelay 0001                        ??_Clock 001C  
               _Port_BBSPIInit 16C0                        ??_Intro 001C             __end_of_LCDPutChar 1416  
           __end_of_LCDPutInst 147C             __size_of_set_Clock 007E                     _disp_Clock 1070  
       __end_of_Port_BBSPIInit 16DA                        _LCDInit 147C                  _SendByteBBSPI 153C  
  __end_of_InterruptInitialize 1744               WritePort_BBSPI@a 0016                        _SWdelay 163C  
                      __Hparam 0000                        __Lparam 0000            __size_of_IntroDelay 0060  
                      ___awdiv 11C8                        ___awmod 1340       __size_of_WritePort_BBSPI 001A  
                 __psmallconst 1000                        __pcinit 16F4                        __ramtop 1000  
                      __ptext0 1666                        __ptext1 172C                        __ptext2 16A4  
                      __ptext3 1744                        __ptext4 1686                        __ptext5 173A  
                      __ptext6 160C                        __ptext7 147C                        __ptext8 16C0  
                      __ptext9 170A                      _T1CONbits 000FCD                 ?_SendByteBBSPI 0001  
              ?_Port_BBSPIInit 0001               ___awmod@dividend 0013                        _timeset 001F  
               _PortInitialize 1686                      _LCDPutStr 15DA                 __pintcode_body 112C  
         end_of_initialization 1700              __end_of_set_Clock 12CA                        int_func 112C  
               _TMR1Initialize 16A4                      _RCSTAbits 000FAB                        postinc0 000FEE  
                    _PORTAbits 000F80                      _PORTBbits 000F81                      _TMR1Start 1744  
                  ?_disp_Clock 0001               _InterruptManager 0008                      _TRISAbits 000F92  
                    _TRISBbits 000F93         __end_of_PortInitialize 16A4                      _TRISCbits 000F94  
                    _TRISFbits 000F97                     ?_LCDPutStr 001A            SendByteBBSPI@output 0013  
       __end_of_TMR1Initialize 16C0                ??_SendByteBBSPI 0013                     ?_TMR1Start 0001  
                    _InitBBSPI 170A                   ??_IntroDelay 0013              ??_WritePort_BBSPI 0017  
          start_initialization 16F4                ?_PortInitialize 0001                  ??_count_Clock 001C  
 __end_of_TMR1InterruptRoutine 172C                ?_TMR1Initialize 0001            __size_of_disp_Clock 00BC  
        __end_of_SysInitialize 173A             __end_of_IntroDelay 153C               __CFG_LPT1OSC$OFF 000000  
                   ?_InitBBSPI 0001                       ?_LCDInit 0001                    __pbssCOMRAM 001C  
                  ??_LCDPutStr 001C                       ?_SWdelay 0001            __end_of_count_Clock 1340  
            __CFG_CCP2MX$PORTC 000000                      __pintcode 0008                       ?___awdiv 0013  
                     ?___awmod 0013               ??_Port_BBSPIInit 0016                    ??_TMR1Start 0013  
                  __smallconst 1000                 __size_of_Clock 004E                 __size_of_Intro 0030  
 __size_of_InterruptInitialize 000A                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATFbits 000F8E                      _set_Clock 124C       __end_of_InterruptManager 11C8  
                     _PIE1bits 000F9D                       _PIR1bits 000F9E          __CFG_DATABW$DATA16BIT 000000  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000              __CFG_ECCPMX$PORTE 000000  
                   _ADCON1bits 000FC1                    ??_InitBBSPI 0013             SendByteBBSPI@input 0015  
                 ??_disp_Clock 001C           _TMR1InterruptRoutine 171C               __size_of_LCDInit 0060  
                  _count_Clock 12CA                     ?_set_Clock 0001               __size_of_SWdelay 002A  
                     __Hrparam 0000             __end_of_disp_Clock 112C                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000                _WritePort_BBSPI 16DA               __size_of___awdiv 0084  
             __size_of___awmod 0070               ??_PortInitialize 0013          ?_TMR1InterruptRoutine 0001  
                     __ptext10 14DC                       __ptext11 158C                       __ptext20 16DA  
                     __ptext12 12CA                       __ptext21 153C                       __ptext13 124C  
                     __ptext22 163C                       __ptext14 1070                       __ptext15 1340  
                     __ptext24 171C                       __ptext16 11C8                       __ptext17 15DA  
                     __ptext18 13B0                       __ptext19 1416               ??_TMR1Initialize 0013  
                IntroDelay@aux 0017                  __size_of_main 0020                       int$flags 0024  
                   _LCDPutChar 13B0                     _LCDPutInst 1416          __end_of_SendByteBBSPI 158C  
        __CFG_ADDRBW$ADDR20BIT 000000                     _INTCONbits 000FF2                       intlevel2 0000  
                 _StateMachine 001D        __end_of_WritePort_BBSPI 16F4                    ??_set_Clock 001C  
       ??_TMR1InterruptRoutine 0001            _InterruptInitialize 173A        WritePort_BBSPI@port_add 0017  
       __size_of_SysInitialize 000E           ?_InterruptInitialize 0001              ?_InterruptManager 0001  
